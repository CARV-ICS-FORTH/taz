// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_INSTANCES_FBS_TAZ_PROFILE_H_
#define FLATBUFFERS_GENERATED_INSTANCES_FBS_TAZ_PROFILE_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 23 &&
              FLATBUFFERS_VERSION_MINOR == 5 &&
              FLATBUFFERS_VERSION_REVISION == 9,
             "Non-compatible flatbuffers version included");

namespace fbs {
namespace taz {
namespace profile {

struct PrimitiveInstance;
struct PrimitiveInstanceBuilder;

enum PrimitiveType : uint16_t {
  PrimitiveType_MpiAbort = 0,
  PrimitiveType_MpiAccumulate = 1,
  PrimitiveType_MpiAddErrorClass = 2,
  PrimitiveType_MpiAddErrorCode = 3,
  PrimitiveType_MpiAddErrorString = 4,
  PrimitiveType_MpiAllgather = 5,
  PrimitiveType_MpiIallgather = 6,
  PrimitiveType_MpiAllgatherInit = 7,
  PrimitiveType_MpiAllgatherv = 8,
  PrimitiveType_MpiIallgatherv = 9,
  PrimitiveType_MpiAllgathervInit = 10,
  PrimitiveType_MpiAllocMem = 11,
  PrimitiveType_MpiAllreduce = 12,
  PrimitiveType_MpiIallreduce = 13,
  PrimitiveType_MpiAllreduceInit = 14,
  PrimitiveType_MpiAlltoall = 15,
  PrimitiveType_MpiIalltoall = 16,
  PrimitiveType_MpiAlltoallInit = 17,
  PrimitiveType_MpiAlltoallv = 18,
  PrimitiveType_MpiIalltoallv = 19,
  PrimitiveType_MpiAlltoallvInit = 20,
  PrimitiveType_MpiAlltoallw = 21,
  PrimitiveType_MpiIalltoallw = 22,
  PrimitiveType_MpiAlltoallwInit = 23,
  PrimitiveType_MpiBarrier = 24,
  PrimitiveType_MpiIbarrier = 25,
  PrimitiveType_MpiBarrierInit = 26,
  PrimitiveType_MpiBcast = 27,
  PrimitiveType_MpiIbcast = 28,
  PrimitiveType_MpiBcastInit = 29,
  PrimitiveType_MpiBsend = 30,
  PrimitiveType_MpiBsendInit = 31,
  PrimitiveType_MpiBufferAttach = 32,
  PrimitiveType_MpiBufferDetach = 33,
  PrimitiveType_MpiCancel = 34,
  PrimitiveType_MpiCartCoords = 35,
  PrimitiveType_MpiCartCreate = 36,
  PrimitiveType_MpiCartGet = 37,
  PrimitiveType_MpiCartMap = 38,
  PrimitiveType_MpiCartRank = 39,
  PrimitiveType_MpiCartShift = 40,
  PrimitiveType_MpiCartSub = 41,
  PrimitiveType_MpiCartdimGet = 42,
  PrimitiveType_MpiClosePort = 43,
  PrimitiveType_MpiCommAccept = 44,
  PrimitiveType_MpiCommC2f = 45,
  PrimitiveType_MpiCommCallErrhandler = 46,
  PrimitiveType_MpiCommCompare = 47,
  PrimitiveType_MpiCommConnect = 48,
  PrimitiveType_MpiCommCreateErrhandler = 49,
  PrimitiveType_MpiCommCreateKeyval = 50,
  PrimitiveType_MpiCommCreateGroup = 51,
  PrimitiveType_MpiCommCreateFromGroup = 52,
  PrimitiveType_MpiCommCreate = 53,
  PrimitiveType_MpiCommDeleteAttr = 54,
  PrimitiveType_MpiCommDisconnect = 55,
  PrimitiveType_MpiCommDup = 56,
  PrimitiveType_MpiCommIdup = 57,
  PrimitiveType_MpiCommDupWithInfo = 58,
  PrimitiveType_MpiCommIdupWithInfo = 59,
  PrimitiveType_MpiCommF2c = 60,
  PrimitiveType_MpiCommFreeKeyval = 61,
  PrimitiveType_MpiCommFree = 62,
  PrimitiveType_MpiCommGetAttr = 63,
  PrimitiveType_MpiDistGraphCreate = 64,
  PrimitiveType_MpiDistGraphCreateAdjacent = 65,
  PrimitiveType_MpiDistGraphNeighbors = 66,
  PrimitiveType_MpiDistGraphNeighborsCount = 67,
  PrimitiveType_MpiCommGetErrhandler = 68,
  PrimitiveType_MpiCommGetInfo = 69,
  PrimitiveType_MpiCommGetName = 70,
  PrimitiveType_MpiCommGetParent = 71,
  PrimitiveType_MpiCommGroup = 72,
  PrimitiveType_MpiCommJoin = 73,
  PrimitiveType_MpiCommRank = 74,
  PrimitiveType_MpiCommRemoteGroup = 75,
  PrimitiveType_MpiCommRemoteSize = 76,
  PrimitiveType_MpiCommSetAttr = 77,
  PrimitiveType_MpiCommSetErrhandler = 78,
  PrimitiveType_MpiCommSetInfo = 79,
  PrimitiveType_MpiCommSetName = 80,
  PrimitiveType_MpiCommSize = 81,
  PrimitiveType_MpiCommSpawn = 82,
  PrimitiveType_MpiCommSpawnMultiple = 83,
  PrimitiveType_MpiCommSplit = 84,
  PrimitiveType_MpiCommSplitType = 85,
  PrimitiveType_MpiCommTestInter = 86,
  PrimitiveType_MpiCompareAndSwap = 87,
  PrimitiveType_MpiDimsCreate = 88,
  PrimitiveType_MpiErrhandlerC2f = 89,
  PrimitiveType_MpiErrhandlerF2c = 90,
  PrimitiveType_MpiErrhandlerFree = 91,
  PrimitiveType_MpiErrorClass = 92,
  PrimitiveType_MpiErrorString = 93,
  PrimitiveType_MpiExscan = 94,
  PrimitiveType_MpiIexscan = 95,
  PrimitiveType_MpiExscanInit = 96,
  PrimitiveType_MpiFetchAndOp = 97,
  PrimitiveType_MpiFileC2f = 98,
  PrimitiveType_MpiFileF2c = 99,
  PrimitiveType_MpiFileCallErrhandler = 100,
  PrimitiveType_MpiFileCreateErrhandler = 101,
  PrimitiveType_MpiFileSetErrhandler = 102,
  PrimitiveType_MpiFileGetErrhandler = 103,
  PrimitiveType_MpiFileOpen = 104,
  PrimitiveType_MpiFileClose = 105,
  PrimitiveType_MpiFileDelete = 106,
  PrimitiveType_MpiFileSetSize = 107,
  PrimitiveType_MpiFilePreallocate = 108,
  PrimitiveType_MpiFileGetSize = 109,
  PrimitiveType_MpiFileGetGroup = 110,
  PrimitiveType_MpiFileGetAmode = 111,
  PrimitiveType_MpiFileSetInfo = 112,
  PrimitiveType_MpiFileGetInfo = 113,
  PrimitiveType_MpiFileSetView = 114,
  PrimitiveType_MpiFileGetView = 115,
  PrimitiveType_MpiFileReadAt = 116,
  PrimitiveType_MpiFileReadAtAll = 117,
  PrimitiveType_MpiFileWriteAt = 118,
  PrimitiveType_MpiFileWriteAtAll = 119,
  PrimitiveType_MpiFileIreadAt = 120,
  PrimitiveType_MpiFileIwriteAt = 121,
  PrimitiveType_MpiFileIreadAtAll = 122,
  PrimitiveType_MpiFileIwriteAtAll = 123,
  PrimitiveType_MpiFileRead = 124,
  PrimitiveType_MpiFileReadAll = 125,
  PrimitiveType_MpiFileWrite = 126,
  PrimitiveType_MpiFileWriteAll = 127,
  PrimitiveType_MpiFileIread = 128,
  PrimitiveType_MpiFileIwrite = 129,
  PrimitiveType_MpiFileIreadAll = 130,
  PrimitiveType_MpiFileIwriteAll = 131,
  PrimitiveType_MpiFileSeek = 132,
  PrimitiveType_MpiFileGetPosition = 133,
  PrimitiveType_MpiFileGetByteOffset = 134,
  PrimitiveType_MpiFileReadShared = 135,
  PrimitiveType_MpiFileWriteShared = 136,
  PrimitiveType_MpiFileIreadShared = 137,
  PrimitiveType_MpiFileIwriteShared = 138,
  PrimitiveType_MpiFileReadOrdered = 139,
  PrimitiveType_MpiFileWriteOrdered = 140,
  PrimitiveType_MpiFileSeekShared = 141,
  PrimitiveType_MpiFileGetPositionShared = 142,
  PrimitiveType_MpiFileReadAtAllBegin = 143,
  PrimitiveType_MpiFileReadAtAllEnd = 144,
  PrimitiveType_MpiFileWriteAtAllBegin = 145,
  PrimitiveType_MpiFileWriteAtAllEnd = 146,
  PrimitiveType_MpiFileReadAllBegin = 147,
  PrimitiveType_MpiFileReadAllEnd = 148,
  PrimitiveType_MpiFileWriteAllBegin = 149,
  PrimitiveType_MpiFileWriteAllEnd = 150,
  PrimitiveType_MpiFileReadOrderedBegin = 151,
  PrimitiveType_MpiFileReadOrderedEnd = 152,
  PrimitiveType_MpiFileWriteOrderedBegin = 153,
  PrimitiveType_MpiFileWriteOrderedEnd = 154,
  PrimitiveType_MpiFileGetTypeExtent = 155,
  PrimitiveType_MpiFileSetAtomicity = 156,
  PrimitiveType_MpiFileGetAtomicity = 157,
  PrimitiveType_MpiFileSync = 158,
  PrimitiveType_MpiFinalize = 159,
  PrimitiveType_MpiFinalized = 160,
  PrimitiveType_MpiFreeMem = 161,
  PrimitiveType_MpiGather = 162,
  PrimitiveType_MpiIgather = 163,
  PrimitiveType_MpiGatherInit = 164,
  PrimitiveType_MpiGatherv = 165,
  PrimitiveType_MpiIgatherv = 166,
  PrimitiveType_MpiGathervInit = 167,
  PrimitiveType_MpiGetAddress = 168,
  PrimitiveType_MpiGetCount = 169,
  PrimitiveType_MpiGetElements = 170,
  PrimitiveType_MpiGetElementsX = 171,
  PrimitiveType_MpiGet = 172,
  PrimitiveType_MpiGetAccumulate = 173,
  PrimitiveType_MpiGetLibraryVersion = 174,
  PrimitiveType_MpiGetProcessorName = 175,
  PrimitiveType_MpiGetVersion = 176,
  PrimitiveType_MpiGraphCreate = 177,
  PrimitiveType_MpiGraphGet = 178,
  PrimitiveType_MpiGraphMap = 179,
  PrimitiveType_MpiGraphNeighborsCount = 180,
  PrimitiveType_MpiGraphNeighbors = 181,
  PrimitiveType_MpiGraphdimsGet = 182,
  PrimitiveType_MpiGrequestComplete = 183,
  PrimitiveType_MpiGrequestStart = 184,
  PrimitiveType_MpiGroupC2f = 185,
  PrimitiveType_MpiGroupCompare = 186,
  PrimitiveType_MpiGroupDifference = 187,
  PrimitiveType_MpiGroupExcl = 188,
  PrimitiveType_MpiGroupF2c = 189,
  PrimitiveType_MpiGroupFree = 190,
  PrimitiveType_MpiGroupIncl = 191,
  PrimitiveType_MpiGroupIntersection = 192,
  PrimitiveType_MpiGroupRangeExcl = 193,
  PrimitiveType_MpiGroupRangeIncl = 194,
  PrimitiveType_MpiGroupRank = 195,
  PrimitiveType_MpiGroupSize = 196,
  PrimitiveType_MpiGroupTranslateRanks = 197,
  PrimitiveType_MpiGroupUnion = 198,
  PrimitiveType_MpiIbsend = 199,
  PrimitiveType_MpiImprobe = 200,
  PrimitiveType_MpiImrecv = 201,
  PrimitiveType_MpiInfoC2f = 202,
  PrimitiveType_MpiInfoCreate = 203,
  PrimitiveType_MpiInfoCreateEnv = 204,
  PrimitiveType_MpiInfoDelete = 205,
  PrimitiveType_MpiInfoDup = 206,
  PrimitiveType_MpiInfoF2c = 207,
  PrimitiveType_MpiInfoFree = 208,
  PrimitiveType_MpiInfoGetNkeys = 209,
  PrimitiveType_MpiInfoGetNthkey = 210,
  PrimitiveType_MpiInfoGetString = 211,
  PrimitiveType_MpiInfoSet = 212,
  PrimitiveType_MpiInit = 213,
  PrimitiveType_MpiInitialized = 214,
  PrimitiveType_MpiInitThread = 215,
  PrimitiveType_MpiIntercommCreate = 216,
  PrimitiveType_MpiIntercommCreateFromGroups = 217,
  PrimitiveType_MpiIntercommMerge = 218,
  PrimitiveType_MpiIprobe = 219,
  PrimitiveType_MpiIrecv = 220,
  PrimitiveType_MpiIrsend = 221,
  PrimitiveType_MpiIsend = 222,
  PrimitiveType_MpiIsendrecv = 223,
  PrimitiveType_MpiIsendrecvReplace = 224,
  PrimitiveType_MpiIssend = 225,
  PrimitiveType_MpiIsThreadMain = 226,
  PrimitiveType_MpiLookupName = 227,
  PrimitiveType_MpiMessageC2f = 228,
  PrimitiveType_MpiMessageF2c = 229,
  PrimitiveType_MpiMprobe = 230,
  PrimitiveType_MpiMrecv = 231,
  PrimitiveType_MpiNeighborAllgather = 232,
  PrimitiveType_MpiIneighborAllgather = 233,
  PrimitiveType_MpiNeighborAllgatherv = 234,
  PrimitiveType_MpiNeighborAllgatherInit = 235,
  PrimitiveType_MpiIneighborAllgatherv = 236,
  PrimitiveType_MpiNeighborAllgathervInit = 237,
  PrimitiveType_MpiNeighborAlltoall = 238,
  PrimitiveType_MpiIneighborAlltoall = 239,
  PrimitiveType_MpiNeighborAlltoallInit = 240,
  PrimitiveType_MpiNeighborAlltoallv = 241,
  PrimitiveType_MpiIneighborAlltoallv = 242,
  PrimitiveType_MpiNeighborAlltoallvInit = 243,
  PrimitiveType_MpiNeighborAlltoallw = 244,
  PrimitiveType_MpiIneighborAlltoallw = 245,
  PrimitiveType_MpiNeighborAlltoallwInit = 246,
  PrimitiveType_MpiOpC2f = 247,
  PrimitiveType_MpiOpCommutative = 248,
  PrimitiveType_MpiOpCreate = 249,
  PrimitiveType_MpiOpenPort = 250,
  PrimitiveType_MpiOpF2c = 251,
  PrimitiveType_MpiOpFree = 252,
  PrimitiveType_MpiPackExternal = 253,
  PrimitiveType_MpiPackExternalSize = 254,
  PrimitiveType_MpiPack = 255,
  PrimitiveType_MpiPackSize = 256,
  PrimitiveType_MpiParrived = 257,
  PrimitiveType_MpiPcontrol = 258,
  PrimitiveType_MpiPready = 259,
  PrimitiveType_MpiPreadyRange = 260,
  PrimitiveType_MpiPreadyList = 261,
  PrimitiveType_MpiPrecvInit = 262,
  PrimitiveType_MpiProbe = 263,
  PrimitiveType_MpiPsendInit = 264,
  PrimitiveType_MpiPublishName = 265,
  PrimitiveType_MpiPut = 266,
  PrimitiveType_MpiQueryThread = 267,
  PrimitiveType_MpiRaccumulate = 268,
  PrimitiveType_MpiRecvInit = 269,
  PrimitiveType_MpiRecv = 270,
  PrimitiveType_MpiReduce = 271,
  PrimitiveType_MpiIreduce = 272,
  PrimitiveType_MpiReduceInit = 273,
  PrimitiveType_MpiReduceLocal = 274,
  PrimitiveType_MpiReduceScatter = 275,
  PrimitiveType_MpiIreduceScatter = 276,
  PrimitiveType_MpiReduceScatterInit = 277,
  PrimitiveType_MpiReduceScatterBlock = 278,
  PrimitiveType_MpiIreduceScatterBlock = 279,
  PrimitiveType_MpiReduceScatterBlockInit = 280,
  PrimitiveType_MpiRegisterDatarep = 281,
  PrimitiveType_MpiRequestC2f = 282,
  PrimitiveType_MpiRequestF2c = 283,
  PrimitiveType_MpiRequestFree = 284,
  PrimitiveType_MpiRequestGetStatus = 285,
  PrimitiveType_MpiRget = 286,
  PrimitiveType_MpiRgetAccumulate = 287,
  PrimitiveType_MpiRput = 288,
  PrimitiveType_MpiRsend = 289,
  PrimitiveType_MpiRsendInit = 290,
  PrimitiveType_MpiScan = 291,
  PrimitiveType_MpiIscan = 292,
  PrimitiveType_MpiScanInit = 293,
  PrimitiveType_MpiScatter = 294,
  PrimitiveType_MpiIscatter = 295,
  PrimitiveType_MpiScatterInit = 296,
  PrimitiveType_MpiScatterv = 297,
  PrimitiveType_MpiIscatterv = 298,
  PrimitiveType_MpiScattervInit = 299,
  PrimitiveType_MpiSendInit = 300,
  PrimitiveType_MpiSend = 301,
  PrimitiveType_MpiSendrecv = 302,
  PrimitiveType_MpiSendrecvReplace = 303,
  PrimitiveType_MpiSsendInit = 304,
  PrimitiveType_MpiSsend = 305,
  PrimitiveType_MpiStart = 306,
  PrimitiveType_MpiStartall = 307,
  PrimitiveType_MpiStatusC2f = 308,
  PrimitiveType_MpiStatusC2f08 = 309,
  PrimitiveType_MpiStatusF082c = 310,
  PrimitiveType_MpiStatusF082f = 311,
  PrimitiveType_MpiStatusF2c = 312,
  PrimitiveType_MpiStatusF2f08 = 313,
  PrimitiveType_MpiStatusSetCancelled = 314,
  PrimitiveType_MpiStatusSetElements = 315,
  PrimitiveType_MpiStatusSetElementsX = 316,
  PrimitiveType_MpiTestall = 317,
  PrimitiveType_MpiTestany = 318,
  PrimitiveType_MpiTest = 319,
  PrimitiveType_MpiTestCancelled = 320,
  PrimitiveType_MpiTestsome = 321,
  PrimitiveType_MpiTopoTest = 322,
  PrimitiveType_MpiTypeC2f = 323,
  PrimitiveType_MpiTypeCommit = 324,
  PrimitiveType_MpiTypeContiguous = 325,
  PrimitiveType_MpiTypeCreateDarray = 326,
  PrimitiveType_MpiTypeCreateF90Complex = 327,
  PrimitiveType_MpiTypeCreateF90Integer = 328,
  PrimitiveType_MpiTypeCreateF90Real = 329,
  PrimitiveType_MpiTypeCreateHindexedBlock = 330,
  PrimitiveType_MpiTypeCreateHindexed = 331,
  PrimitiveType_MpiTypeCreateHvector = 332,
  PrimitiveType_MpiTypeCreateKeyval = 333,
  PrimitiveType_MpiTypeCreateIndexedBlock = 334,
  PrimitiveType_MpiTypeCreateStruct = 335,
  PrimitiveType_MpiTypeCreateSubarray = 336,
  PrimitiveType_MpiTypeCreateResized = 337,
  PrimitiveType_MpiTypeDeleteAttr = 338,
  PrimitiveType_MpiTypeDup = 339,
  PrimitiveType_MpiTypeFree = 340,
  PrimitiveType_MpiTypeFreeKeyval = 341,
  PrimitiveType_MpiTypeF2c = 342,
  PrimitiveType_MpiTypeGetAttr = 343,
  PrimitiveType_MpiTypeGetContents = 344,
  PrimitiveType_MpiTypeGetEnvelope = 345,
  PrimitiveType_MpiTypeGetExtent = 346,
  PrimitiveType_MpiTypeGetExtentX = 347,
  PrimitiveType_MpiTypeGetName = 348,
  PrimitiveType_MpiTypeGetTrueExtent = 349,
  PrimitiveType_MpiTypeGetTrueExtentX = 350,
  PrimitiveType_MpiTypeIndexed = 351,
  PrimitiveType_MpiTypeMatchSize = 352,
  PrimitiveType_MpiTypeSetAttr = 353,
  PrimitiveType_MpiTypeSetName = 354,
  PrimitiveType_MpiTypeSize = 355,
  PrimitiveType_MpiTypeSizeX = 356,
  PrimitiveType_MpiTypeVector = 357,
  PrimitiveType_MpiUnpack = 358,
  PrimitiveType_MpiUnpublishName = 359,
  PrimitiveType_MpiUnpackExternal = 360,
  PrimitiveType_MpiWaitall = 361,
  PrimitiveType_MpiWaitany = 362,
  PrimitiveType_MpiWait = 363,
  PrimitiveType_MpiWaitsome = 364,
  PrimitiveType_MpiWinAllocate = 365,
  PrimitiveType_MpiWinAllocateShared = 366,
  PrimitiveType_MpiWinAttach = 367,
  PrimitiveType_MpiWinC2f = 368,
  PrimitiveType_MpiWinCallErrhandler = 369,
  PrimitiveType_MpiWinComplete = 370,
  PrimitiveType_MpiWinCreate = 371,
  PrimitiveType_MpiWinCreateDynamic = 372,
  PrimitiveType_MpiWinCreateErrhandler = 373,
  PrimitiveType_MpiWinCreateKeyval = 374,
  PrimitiveType_MpiWinDeleteAttr = 375,
  PrimitiveType_MpiWinDetach = 376,
  PrimitiveType_MpiWinF2c = 377,
  PrimitiveType_MpiWinFence = 378,
  PrimitiveType_MpiWinFlush = 379,
  PrimitiveType_MpiWinFlushAll = 380,
  PrimitiveType_MpiWinFlushLocal = 381,
  PrimitiveType_MpiWinFlushLocalAll = 382,
  PrimitiveType_MpiWinFree = 383,
  PrimitiveType_MpiWinFreeKeyval = 384,
  PrimitiveType_MpiWinGetAttr = 385,
  PrimitiveType_MpiWinGetErrhandler = 386,
  PrimitiveType_MpiWinGetGroup = 387,
  PrimitiveType_MpiWinGetInfo = 388,
  PrimitiveType_MpiWinGetName = 389,
  PrimitiveType_MpiWinLock = 390,
  PrimitiveType_MpiWinLockAll = 391,
  PrimitiveType_MpiWinPost = 392,
  PrimitiveType_MpiWinSetAttr = 393,
  PrimitiveType_MpiWinSetErrhandler = 394,
  PrimitiveType_MpiWinSetInfo = 395,
  PrimitiveType_MpiWinSetName = 396,
  PrimitiveType_MpiWinSharedQuery = 397,
  PrimitiveType_MpiWinStart = 398,
  PrimitiveType_MpiWinSync = 399,
  PrimitiveType_MpiWinTest = 400,
  PrimitiveType_MpiWinUnlock = 401,
  PrimitiveType_MpiWinUnlockAll = 402,
  PrimitiveType_MpiWinWait = 403,
  PrimitiveType_MpiWtick = 404,
  PrimitiveType_MpiWtime = 405,
  PrimitiveType_MIN = PrimitiveType_MpiAbort,
  PrimitiveType_MAX = PrimitiveType_MpiWtime
};

inline const PrimitiveType (&EnumValuesPrimitiveType())[406] {
  static const PrimitiveType values[] = {
    PrimitiveType_MpiAbort,
    PrimitiveType_MpiAccumulate,
    PrimitiveType_MpiAddErrorClass,
    PrimitiveType_MpiAddErrorCode,
    PrimitiveType_MpiAddErrorString,
    PrimitiveType_MpiAllgather,
    PrimitiveType_MpiIallgather,
    PrimitiveType_MpiAllgatherInit,
    PrimitiveType_MpiAllgatherv,
    PrimitiveType_MpiIallgatherv,
    PrimitiveType_MpiAllgathervInit,
    PrimitiveType_MpiAllocMem,
    PrimitiveType_MpiAllreduce,
    PrimitiveType_MpiIallreduce,
    PrimitiveType_MpiAllreduceInit,
    PrimitiveType_MpiAlltoall,
    PrimitiveType_MpiIalltoall,
    PrimitiveType_MpiAlltoallInit,
    PrimitiveType_MpiAlltoallv,
    PrimitiveType_MpiIalltoallv,
    PrimitiveType_MpiAlltoallvInit,
    PrimitiveType_MpiAlltoallw,
    PrimitiveType_MpiIalltoallw,
    PrimitiveType_MpiAlltoallwInit,
    PrimitiveType_MpiBarrier,
    PrimitiveType_MpiIbarrier,
    PrimitiveType_MpiBarrierInit,
    PrimitiveType_MpiBcast,
    PrimitiveType_MpiIbcast,
    PrimitiveType_MpiBcastInit,
    PrimitiveType_MpiBsend,
    PrimitiveType_MpiBsendInit,
    PrimitiveType_MpiBufferAttach,
    PrimitiveType_MpiBufferDetach,
    PrimitiveType_MpiCancel,
    PrimitiveType_MpiCartCoords,
    PrimitiveType_MpiCartCreate,
    PrimitiveType_MpiCartGet,
    PrimitiveType_MpiCartMap,
    PrimitiveType_MpiCartRank,
    PrimitiveType_MpiCartShift,
    PrimitiveType_MpiCartSub,
    PrimitiveType_MpiCartdimGet,
    PrimitiveType_MpiClosePort,
    PrimitiveType_MpiCommAccept,
    PrimitiveType_MpiCommC2f,
    PrimitiveType_MpiCommCallErrhandler,
    PrimitiveType_MpiCommCompare,
    PrimitiveType_MpiCommConnect,
    PrimitiveType_MpiCommCreateErrhandler,
    PrimitiveType_MpiCommCreateKeyval,
    PrimitiveType_MpiCommCreateGroup,
    PrimitiveType_MpiCommCreateFromGroup,
    PrimitiveType_MpiCommCreate,
    PrimitiveType_MpiCommDeleteAttr,
    PrimitiveType_MpiCommDisconnect,
    PrimitiveType_MpiCommDup,
    PrimitiveType_MpiCommIdup,
    PrimitiveType_MpiCommDupWithInfo,
    PrimitiveType_MpiCommIdupWithInfo,
    PrimitiveType_MpiCommF2c,
    PrimitiveType_MpiCommFreeKeyval,
    PrimitiveType_MpiCommFree,
    PrimitiveType_MpiCommGetAttr,
    PrimitiveType_MpiDistGraphCreate,
    PrimitiveType_MpiDistGraphCreateAdjacent,
    PrimitiveType_MpiDistGraphNeighbors,
    PrimitiveType_MpiDistGraphNeighborsCount,
    PrimitiveType_MpiCommGetErrhandler,
    PrimitiveType_MpiCommGetInfo,
    PrimitiveType_MpiCommGetName,
    PrimitiveType_MpiCommGetParent,
    PrimitiveType_MpiCommGroup,
    PrimitiveType_MpiCommJoin,
    PrimitiveType_MpiCommRank,
    PrimitiveType_MpiCommRemoteGroup,
    PrimitiveType_MpiCommRemoteSize,
    PrimitiveType_MpiCommSetAttr,
    PrimitiveType_MpiCommSetErrhandler,
    PrimitiveType_MpiCommSetInfo,
    PrimitiveType_MpiCommSetName,
    PrimitiveType_MpiCommSize,
    PrimitiveType_MpiCommSpawn,
    PrimitiveType_MpiCommSpawnMultiple,
    PrimitiveType_MpiCommSplit,
    PrimitiveType_MpiCommSplitType,
    PrimitiveType_MpiCommTestInter,
    PrimitiveType_MpiCompareAndSwap,
    PrimitiveType_MpiDimsCreate,
    PrimitiveType_MpiErrhandlerC2f,
    PrimitiveType_MpiErrhandlerF2c,
    PrimitiveType_MpiErrhandlerFree,
    PrimitiveType_MpiErrorClass,
    PrimitiveType_MpiErrorString,
    PrimitiveType_MpiExscan,
    PrimitiveType_MpiIexscan,
    PrimitiveType_MpiExscanInit,
    PrimitiveType_MpiFetchAndOp,
    PrimitiveType_MpiFileC2f,
    PrimitiveType_MpiFileF2c,
    PrimitiveType_MpiFileCallErrhandler,
    PrimitiveType_MpiFileCreateErrhandler,
    PrimitiveType_MpiFileSetErrhandler,
    PrimitiveType_MpiFileGetErrhandler,
    PrimitiveType_MpiFileOpen,
    PrimitiveType_MpiFileClose,
    PrimitiveType_MpiFileDelete,
    PrimitiveType_MpiFileSetSize,
    PrimitiveType_MpiFilePreallocate,
    PrimitiveType_MpiFileGetSize,
    PrimitiveType_MpiFileGetGroup,
    PrimitiveType_MpiFileGetAmode,
    PrimitiveType_MpiFileSetInfo,
    PrimitiveType_MpiFileGetInfo,
    PrimitiveType_MpiFileSetView,
    PrimitiveType_MpiFileGetView,
    PrimitiveType_MpiFileReadAt,
    PrimitiveType_MpiFileReadAtAll,
    PrimitiveType_MpiFileWriteAt,
    PrimitiveType_MpiFileWriteAtAll,
    PrimitiveType_MpiFileIreadAt,
    PrimitiveType_MpiFileIwriteAt,
    PrimitiveType_MpiFileIreadAtAll,
    PrimitiveType_MpiFileIwriteAtAll,
    PrimitiveType_MpiFileRead,
    PrimitiveType_MpiFileReadAll,
    PrimitiveType_MpiFileWrite,
    PrimitiveType_MpiFileWriteAll,
    PrimitiveType_MpiFileIread,
    PrimitiveType_MpiFileIwrite,
    PrimitiveType_MpiFileIreadAll,
    PrimitiveType_MpiFileIwriteAll,
    PrimitiveType_MpiFileSeek,
    PrimitiveType_MpiFileGetPosition,
    PrimitiveType_MpiFileGetByteOffset,
    PrimitiveType_MpiFileReadShared,
    PrimitiveType_MpiFileWriteShared,
    PrimitiveType_MpiFileIreadShared,
    PrimitiveType_MpiFileIwriteShared,
    PrimitiveType_MpiFileReadOrdered,
    PrimitiveType_MpiFileWriteOrdered,
    PrimitiveType_MpiFileSeekShared,
    PrimitiveType_MpiFileGetPositionShared,
    PrimitiveType_MpiFileReadAtAllBegin,
    PrimitiveType_MpiFileReadAtAllEnd,
    PrimitiveType_MpiFileWriteAtAllBegin,
    PrimitiveType_MpiFileWriteAtAllEnd,
    PrimitiveType_MpiFileReadAllBegin,
    PrimitiveType_MpiFileReadAllEnd,
    PrimitiveType_MpiFileWriteAllBegin,
    PrimitiveType_MpiFileWriteAllEnd,
    PrimitiveType_MpiFileReadOrderedBegin,
    PrimitiveType_MpiFileReadOrderedEnd,
    PrimitiveType_MpiFileWriteOrderedBegin,
    PrimitiveType_MpiFileWriteOrderedEnd,
    PrimitiveType_MpiFileGetTypeExtent,
    PrimitiveType_MpiFileSetAtomicity,
    PrimitiveType_MpiFileGetAtomicity,
    PrimitiveType_MpiFileSync,
    PrimitiveType_MpiFinalize,
    PrimitiveType_MpiFinalized,
    PrimitiveType_MpiFreeMem,
    PrimitiveType_MpiGather,
    PrimitiveType_MpiIgather,
    PrimitiveType_MpiGatherInit,
    PrimitiveType_MpiGatherv,
    PrimitiveType_MpiIgatherv,
    PrimitiveType_MpiGathervInit,
    PrimitiveType_MpiGetAddress,
    PrimitiveType_MpiGetCount,
    PrimitiveType_MpiGetElements,
    PrimitiveType_MpiGetElementsX,
    PrimitiveType_MpiGet,
    PrimitiveType_MpiGetAccumulate,
    PrimitiveType_MpiGetLibraryVersion,
    PrimitiveType_MpiGetProcessorName,
    PrimitiveType_MpiGetVersion,
    PrimitiveType_MpiGraphCreate,
    PrimitiveType_MpiGraphGet,
    PrimitiveType_MpiGraphMap,
    PrimitiveType_MpiGraphNeighborsCount,
    PrimitiveType_MpiGraphNeighbors,
    PrimitiveType_MpiGraphdimsGet,
    PrimitiveType_MpiGrequestComplete,
    PrimitiveType_MpiGrequestStart,
    PrimitiveType_MpiGroupC2f,
    PrimitiveType_MpiGroupCompare,
    PrimitiveType_MpiGroupDifference,
    PrimitiveType_MpiGroupExcl,
    PrimitiveType_MpiGroupF2c,
    PrimitiveType_MpiGroupFree,
    PrimitiveType_MpiGroupIncl,
    PrimitiveType_MpiGroupIntersection,
    PrimitiveType_MpiGroupRangeExcl,
    PrimitiveType_MpiGroupRangeIncl,
    PrimitiveType_MpiGroupRank,
    PrimitiveType_MpiGroupSize,
    PrimitiveType_MpiGroupTranslateRanks,
    PrimitiveType_MpiGroupUnion,
    PrimitiveType_MpiIbsend,
    PrimitiveType_MpiImprobe,
    PrimitiveType_MpiImrecv,
    PrimitiveType_MpiInfoC2f,
    PrimitiveType_MpiInfoCreate,
    PrimitiveType_MpiInfoCreateEnv,
    PrimitiveType_MpiInfoDelete,
    PrimitiveType_MpiInfoDup,
    PrimitiveType_MpiInfoF2c,
    PrimitiveType_MpiInfoFree,
    PrimitiveType_MpiInfoGetNkeys,
    PrimitiveType_MpiInfoGetNthkey,
    PrimitiveType_MpiInfoGetString,
    PrimitiveType_MpiInfoSet,
    PrimitiveType_MpiInit,
    PrimitiveType_MpiInitialized,
    PrimitiveType_MpiInitThread,
    PrimitiveType_MpiIntercommCreate,
    PrimitiveType_MpiIntercommCreateFromGroups,
    PrimitiveType_MpiIntercommMerge,
    PrimitiveType_MpiIprobe,
    PrimitiveType_MpiIrecv,
    PrimitiveType_MpiIrsend,
    PrimitiveType_MpiIsend,
    PrimitiveType_MpiIsendrecv,
    PrimitiveType_MpiIsendrecvReplace,
    PrimitiveType_MpiIssend,
    PrimitiveType_MpiIsThreadMain,
    PrimitiveType_MpiLookupName,
    PrimitiveType_MpiMessageC2f,
    PrimitiveType_MpiMessageF2c,
    PrimitiveType_MpiMprobe,
    PrimitiveType_MpiMrecv,
    PrimitiveType_MpiNeighborAllgather,
    PrimitiveType_MpiIneighborAllgather,
    PrimitiveType_MpiNeighborAllgatherv,
    PrimitiveType_MpiNeighborAllgatherInit,
    PrimitiveType_MpiIneighborAllgatherv,
    PrimitiveType_MpiNeighborAllgathervInit,
    PrimitiveType_MpiNeighborAlltoall,
    PrimitiveType_MpiIneighborAlltoall,
    PrimitiveType_MpiNeighborAlltoallInit,
    PrimitiveType_MpiNeighborAlltoallv,
    PrimitiveType_MpiIneighborAlltoallv,
    PrimitiveType_MpiNeighborAlltoallvInit,
    PrimitiveType_MpiNeighborAlltoallw,
    PrimitiveType_MpiIneighborAlltoallw,
    PrimitiveType_MpiNeighborAlltoallwInit,
    PrimitiveType_MpiOpC2f,
    PrimitiveType_MpiOpCommutative,
    PrimitiveType_MpiOpCreate,
    PrimitiveType_MpiOpenPort,
    PrimitiveType_MpiOpF2c,
    PrimitiveType_MpiOpFree,
    PrimitiveType_MpiPackExternal,
    PrimitiveType_MpiPackExternalSize,
    PrimitiveType_MpiPack,
    PrimitiveType_MpiPackSize,
    PrimitiveType_MpiParrived,
    PrimitiveType_MpiPcontrol,
    PrimitiveType_MpiPready,
    PrimitiveType_MpiPreadyRange,
    PrimitiveType_MpiPreadyList,
    PrimitiveType_MpiPrecvInit,
    PrimitiveType_MpiProbe,
    PrimitiveType_MpiPsendInit,
    PrimitiveType_MpiPublishName,
    PrimitiveType_MpiPut,
    PrimitiveType_MpiQueryThread,
    PrimitiveType_MpiRaccumulate,
    PrimitiveType_MpiRecvInit,
    PrimitiveType_MpiRecv,
    PrimitiveType_MpiReduce,
    PrimitiveType_MpiIreduce,
    PrimitiveType_MpiReduceInit,
    PrimitiveType_MpiReduceLocal,
    PrimitiveType_MpiReduceScatter,
    PrimitiveType_MpiIreduceScatter,
    PrimitiveType_MpiReduceScatterInit,
    PrimitiveType_MpiReduceScatterBlock,
    PrimitiveType_MpiIreduceScatterBlock,
    PrimitiveType_MpiReduceScatterBlockInit,
    PrimitiveType_MpiRegisterDatarep,
    PrimitiveType_MpiRequestC2f,
    PrimitiveType_MpiRequestF2c,
    PrimitiveType_MpiRequestFree,
    PrimitiveType_MpiRequestGetStatus,
    PrimitiveType_MpiRget,
    PrimitiveType_MpiRgetAccumulate,
    PrimitiveType_MpiRput,
    PrimitiveType_MpiRsend,
    PrimitiveType_MpiRsendInit,
    PrimitiveType_MpiScan,
    PrimitiveType_MpiIscan,
    PrimitiveType_MpiScanInit,
    PrimitiveType_MpiScatter,
    PrimitiveType_MpiIscatter,
    PrimitiveType_MpiScatterInit,
    PrimitiveType_MpiScatterv,
    PrimitiveType_MpiIscatterv,
    PrimitiveType_MpiScattervInit,
    PrimitiveType_MpiSendInit,
    PrimitiveType_MpiSend,
    PrimitiveType_MpiSendrecv,
    PrimitiveType_MpiSendrecvReplace,
    PrimitiveType_MpiSsendInit,
    PrimitiveType_MpiSsend,
    PrimitiveType_MpiStart,
    PrimitiveType_MpiStartall,
    PrimitiveType_MpiStatusC2f,
    PrimitiveType_MpiStatusC2f08,
    PrimitiveType_MpiStatusF082c,
    PrimitiveType_MpiStatusF082f,
    PrimitiveType_MpiStatusF2c,
    PrimitiveType_MpiStatusF2f08,
    PrimitiveType_MpiStatusSetCancelled,
    PrimitiveType_MpiStatusSetElements,
    PrimitiveType_MpiStatusSetElementsX,
    PrimitiveType_MpiTestall,
    PrimitiveType_MpiTestany,
    PrimitiveType_MpiTest,
    PrimitiveType_MpiTestCancelled,
    PrimitiveType_MpiTestsome,
    PrimitiveType_MpiTopoTest,
    PrimitiveType_MpiTypeC2f,
    PrimitiveType_MpiTypeCommit,
    PrimitiveType_MpiTypeContiguous,
    PrimitiveType_MpiTypeCreateDarray,
    PrimitiveType_MpiTypeCreateF90Complex,
    PrimitiveType_MpiTypeCreateF90Integer,
    PrimitiveType_MpiTypeCreateF90Real,
    PrimitiveType_MpiTypeCreateHindexedBlock,
    PrimitiveType_MpiTypeCreateHindexed,
    PrimitiveType_MpiTypeCreateHvector,
    PrimitiveType_MpiTypeCreateKeyval,
    PrimitiveType_MpiTypeCreateIndexedBlock,
    PrimitiveType_MpiTypeCreateStruct,
    PrimitiveType_MpiTypeCreateSubarray,
    PrimitiveType_MpiTypeCreateResized,
    PrimitiveType_MpiTypeDeleteAttr,
    PrimitiveType_MpiTypeDup,
    PrimitiveType_MpiTypeFree,
    PrimitiveType_MpiTypeFreeKeyval,
    PrimitiveType_MpiTypeF2c,
    PrimitiveType_MpiTypeGetAttr,
    PrimitiveType_MpiTypeGetContents,
    PrimitiveType_MpiTypeGetEnvelope,
    PrimitiveType_MpiTypeGetExtent,
    PrimitiveType_MpiTypeGetExtentX,
    PrimitiveType_MpiTypeGetName,
    PrimitiveType_MpiTypeGetTrueExtent,
    PrimitiveType_MpiTypeGetTrueExtentX,
    PrimitiveType_MpiTypeIndexed,
    PrimitiveType_MpiTypeMatchSize,
    PrimitiveType_MpiTypeSetAttr,
    PrimitiveType_MpiTypeSetName,
    PrimitiveType_MpiTypeSize,
    PrimitiveType_MpiTypeSizeX,
    PrimitiveType_MpiTypeVector,
    PrimitiveType_MpiUnpack,
    PrimitiveType_MpiUnpublishName,
    PrimitiveType_MpiUnpackExternal,
    PrimitiveType_MpiWaitall,
    PrimitiveType_MpiWaitany,
    PrimitiveType_MpiWait,
    PrimitiveType_MpiWaitsome,
    PrimitiveType_MpiWinAllocate,
    PrimitiveType_MpiWinAllocateShared,
    PrimitiveType_MpiWinAttach,
    PrimitiveType_MpiWinC2f,
    PrimitiveType_MpiWinCallErrhandler,
    PrimitiveType_MpiWinComplete,
    PrimitiveType_MpiWinCreate,
    PrimitiveType_MpiWinCreateDynamic,
    PrimitiveType_MpiWinCreateErrhandler,
    PrimitiveType_MpiWinCreateKeyval,
    PrimitiveType_MpiWinDeleteAttr,
    PrimitiveType_MpiWinDetach,
    PrimitiveType_MpiWinF2c,
    PrimitiveType_MpiWinFence,
    PrimitiveType_MpiWinFlush,
    PrimitiveType_MpiWinFlushAll,
    PrimitiveType_MpiWinFlushLocal,
    PrimitiveType_MpiWinFlushLocalAll,
    PrimitiveType_MpiWinFree,
    PrimitiveType_MpiWinFreeKeyval,
    PrimitiveType_MpiWinGetAttr,
    PrimitiveType_MpiWinGetErrhandler,
    PrimitiveType_MpiWinGetGroup,
    PrimitiveType_MpiWinGetInfo,
    PrimitiveType_MpiWinGetName,
    PrimitiveType_MpiWinLock,
    PrimitiveType_MpiWinLockAll,
    PrimitiveType_MpiWinPost,
    PrimitiveType_MpiWinSetAttr,
    PrimitiveType_MpiWinSetErrhandler,
    PrimitiveType_MpiWinSetInfo,
    PrimitiveType_MpiWinSetName,
    PrimitiveType_MpiWinSharedQuery,
    PrimitiveType_MpiWinStart,
    PrimitiveType_MpiWinSync,
    PrimitiveType_MpiWinTest,
    PrimitiveType_MpiWinUnlock,
    PrimitiveType_MpiWinUnlockAll,
    PrimitiveType_MpiWinWait,
    PrimitiveType_MpiWtick,
    PrimitiveType_MpiWtime
  };
  return values;
}

inline const char * const *EnumNamesPrimitiveType() {
  static const char * const names[407] = {
    "MpiAbort",
    "MpiAccumulate",
    "MpiAddErrorClass",
    "MpiAddErrorCode",
    "MpiAddErrorString",
    "MpiAllgather",
    "MpiIallgather",
    "MpiAllgatherInit",
    "MpiAllgatherv",
    "MpiIallgatherv",
    "MpiAllgathervInit",
    "MpiAllocMem",
    "MpiAllreduce",
    "MpiIallreduce",
    "MpiAllreduceInit",
    "MpiAlltoall",
    "MpiIalltoall",
    "MpiAlltoallInit",
    "MpiAlltoallv",
    "MpiIalltoallv",
    "MpiAlltoallvInit",
    "MpiAlltoallw",
    "MpiIalltoallw",
    "MpiAlltoallwInit",
    "MpiBarrier",
    "MpiIbarrier",
    "MpiBarrierInit",
    "MpiBcast",
    "MpiIbcast",
    "MpiBcastInit",
    "MpiBsend",
    "MpiBsendInit",
    "MpiBufferAttach",
    "MpiBufferDetach",
    "MpiCancel",
    "MpiCartCoords",
    "MpiCartCreate",
    "MpiCartGet",
    "MpiCartMap",
    "MpiCartRank",
    "MpiCartShift",
    "MpiCartSub",
    "MpiCartdimGet",
    "MpiClosePort",
    "MpiCommAccept",
    "MpiCommC2f",
    "MpiCommCallErrhandler",
    "MpiCommCompare",
    "MpiCommConnect",
    "MpiCommCreateErrhandler",
    "MpiCommCreateKeyval",
    "MpiCommCreateGroup",
    "MpiCommCreateFromGroup",
    "MpiCommCreate",
    "MpiCommDeleteAttr",
    "MpiCommDisconnect",
    "MpiCommDup",
    "MpiCommIdup",
    "MpiCommDupWithInfo",
    "MpiCommIdupWithInfo",
    "MpiCommF2c",
    "MpiCommFreeKeyval",
    "MpiCommFree",
    "MpiCommGetAttr",
    "MpiDistGraphCreate",
    "MpiDistGraphCreateAdjacent",
    "MpiDistGraphNeighbors",
    "MpiDistGraphNeighborsCount",
    "MpiCommGetErrhandler",
    "MpiCommGetInfo",
    "MpiCommGetName",
    "MpiCommGetParent",
    "MpiCommGroup",
    "MpiCommJoin",
    "MpiCommRank",
    "MpiCommRemoteGroup",
    "MpiCommRemoteSize",
    "MpiCommSetAttr",
    "MpiCommSetErrhandler",
    "MpiCommSetInfo",
    "MpiCommSetName",
    "MpiCommSize",
    "MpiCommSpawn",
    "MpiCommSpawnMultiple",
    "MpiCommSplit",
    "MpiCommSplitType",
    "MpiCommTestInter",
    "MpiCompareAndSwap",
    "MpiDimsCreate",
    "MpiErrhandlerC2f",
    "MpiErrhandlerF2c",
    "MpiErrhandlerFree",
    "MpiErrorClass",
    "MpiErrorString",
    "MpiExscan",
    "MpiIexscan",
    "MpiExscanInit",
    "MpiFetchAndOp",
    "MpiFileC2f",
    "MpiFileF2c",
    "MpiFileCallErrhandler",
    "MpiFileCreateErrhandler",
    "MpiFileSetErrhandler",
    "MpiFileGetErrhandler",
    "MpiFileOpen",
    "MpiFileClose",
    "MpiFileDelete",
    "MpiFileSetSize",
    "MpiFilePreallocate",
    "MpiFileGetSize",
    "MpiFileGetGroup",
    "MpiFileGetAmode",
    "MpiFileSetInfo",
    "MpiFileGetInfo",
    "MpiFileSetView",
    "MpiFileGetView",
    "MpiFileReadAt",
    "MpiFileReadAtAll",
    "MpiFileWriteAt",
    "MpiFileWriteAtAll",
    "MpiFileIreadAt",
    "MpiFileIwriteAt",
    "MpiFileIreadAtAll",
    "MpiFileIwriteAtAll",
    "MpiFileRead",
    "MpiFileReadAll",
    "MpiFileWrite",
    "MpiFileWriteAll",
    "MpiFileIread",
    "MpiFileIwrite",
    "MpiFileIreadAll",
    "MpiFileIwriteAll",
    "MpiFileSeek",
    "MpiFileGetPosition",
    "MpiFileGetByteOffset",
    "MpiFileReadShared",
    "MpiFileWriteShared",
    "MpiFileIreadShared",
    "MpiFileIwriteShared",
    "MpiFileReadOrdered",
    "MpiFileWriteOrdered",
    "MpiFileSeekShared",
    "MpiFileGetPositionShared",
    "MpiFileReadAtAllBegin",
    "MpiFileReadAtAllEnd",
    "MpiFileWriteAtAllBegin",
    "MpiFileWriteAtAllEnd",
    "MpiFileReadAllBegin",
    "MpiFileReadAllEnd",
    "MpiFileWriteAllBegin",
    "MpiFileWriteAllEnd",
    "MpiFileReadOrderedBegin",
    "MpiFileReadOrderedEnd",
    "MpiFileWriteOrderedBegin",
    "MpiFileWriteOrderedEnd",
    "MpiFileGetTypeExtent",
    "MpiFileSetAtomicity",
    "MpiFileGetAtomicity",
    "MpiFileSync",
    "MpiFinalize",
    "MpiFinalized",
    "MpiFreeMem",
    "MpiGather",
    "MpiIgather",
    "MpiGatherInit",
    "MpiGatherv",
    "MpiIgatherv",
    "MpiGathervInit",
    "MpiGetAddress",
    "MpiGetCount",
    "MpiGetElements",
    "MpiGetElementsX",
    "MpiGet",
    "MpiGetAccumulate",
    "MpiGetLibraryVersion",
    "MpiGetProcessorName",
    "MpiGetVersion",
    "MpiGraphCreate",
    "MpiGraphGet",
    "MpiGraphMap",
    "MpiGraphNeighborsCount",
    "MpiGraphNeighbors",
    "MpiGraphdimsGet",
    "MpiGrequestComplete",
    "MpiGrequestStart",
    "MpiGroupC2f",
    "MpiGroupCompare",
    "MpiGroupDifference",
    "MpiGroupExcl",
    "MpiGroupF2c",
    "MpiGroupFree",
    "MpiGroupIncl",
    "MpiGroupIntersection",
    "MpiGroupRangeExcl",
    "MpiGroupRangeIncl",
    "MpiGroupRank",
    "MpiGroupSize",
    "MpiGroupTranslateRanks",
    "MpiGroupUnion",
    "MpiIbsend",
    "MpiImprobe",
    "MpiImrecv",
    "MpiInfoC2f",
    "MpiInfoCreate",
    "MpiInfoCreateEnv",
    "MpiInfoDelete",
    "MpiInfoDup",
    "MpiInfoF2c",
    "MpiInfoFree",
    "MpiInfoGetNkeys",
    "MpiInfoGetNthkey",
    "MpiInfoGetString",
    "MpiInfoSet",
    "MpiInit",
    "MpiInitialized",
    "MpiInitThread",
    "MpiIntercommCreate",
    "MpiIntercommCreateFromGroups",
    "MpiIntercommMerge",
    "MpiIprobe",
    "MpiIrecv",
    "MpiIrsend",
    "MpiIsend",
    "MpiIsendrecv",
    "MpiIsendrecvReplace",
    "MpiIssend",
    "MpiIsThreadMain",
    "MpiLookupName",
    "MpiMessageC2f",
    "MpiMessageF2c",
    "MpiMprobe",
    "MpiMrecv",
    "MpiNeighborAllgather",
    "MpiIneighborAllgather",
    "MpiNeighborAllgatherv",
    "MpiNeighborAllgatherInit",
    "MpiIneighborAllgatherv",
    "MpiNeighborAllgathervInit",
    "MpiNeighborAlltoall",
    "MpiIneighborAlltoall",
    "MpiNeighborAlltoallInit",
    "MpiNeighborAlltoallv",
    "MpiIneighborAlltoallv",
    "MpiNeighborAlltoallvInit",
    "MpiNeighborAlltoallw",
    "MpiIneighborAlltoallw",
    "MpiNeighborAlltoallwInit",
    "MpiOpC2f",
    "MpiOpCommutative",
    "MpiOpCreate",
    "MpiOpenPort",
    "MpiOpF2c",
    "MpiOpFree",
    "MpiPackExternal",
    "MpiPackExternalSize",
    "MpiPack",
    "MpiPackSize",
    "MpiParrived",
    "MpiPcontrol",
    "MpiPready",
    "MpiPreadyRange",
    "MpiPreadyList",
    "MpiPrecvInit",
    "MpiProbe",
    "MpiPsendInit",
    "MpiPublishName",
    "MpiPut",
    "MpiQueryThread",
    "MpiRaccumulate",
    "MpiRecvInit",
    "MpiRecv",
    "MpiReduce",
    "MpiIreduce",
    "MpiReduceInit",
    "MpiReduceLocal",
    "MpiReduceScatter",
    "MpiIreduceScatter",
    "MpiReduceScatterInit",
    "MpiReduceScatterBlock",
    "MpiIreduceScatterBlock",
    "MpiReduceScatterBlockInit",
    "MpiRegisterDatarep",
    "MpiRequestC2f",
    "MpiRequestF2c",
    "MpiRequestFree",
    "MpiRequestGetStatus",
    "MpiRget",
    "MpiRgetAccumulate",
    "MpiRput",
    "MpiRsend",
    "MpiRsendInit",
    "MpiScan",
    "MpiIscan",
    "MpiScanInit",
    "MpiScatter",
    "MpiIscatter",
    "MpiScatterInit",
    "MpiScatterv",
    "MpiIscatterv",
    "MpiScattervInit",
    "MpiSendInit",
    "MpiSend",
    "MpiSendrecv",
    "MpiSendrecvReplace",
    "MpiSsendInit",
    "MpiSsend",
    "MpiStart",
    "MpiStartall",
    "MpiStatusC2f",
    "MpiStatusC2f08",
    "MpiStatusF082c",
    "MpiStatusF082f",
    "MpiStatusF2c",
    "MpiStatusF2f08",
    "MpiStatusSetCancelled",
    "MpiStatusSetElements",
    "MpiStatusSetElementsX",
    "MpiTestall",
    "MpiTestany",
    "MpiTest",
    "MpiTestCancelled",
    "MpiTestsome",
    "MpiTopoTest",
    "MpiTypeC2f",
    "MpiTypeCommit",
    "MpiTypeContiguous",
    "MpiTypeCreateDarray",
    "MpiTypeCreateF90Complex",
    "MpiTypeCreateF90Integer",
    "MpiTypeCreateF90Real",
    "MpiTypeCreateHindexedBlock",
    "MpiTypeCreateHindexed",
    "MpiTypeCreateHvector",
    "MpiTypeCreateKeyval",
    "MpiTypeCreateIndexedBlock",
    "MpiTypeCreateStruct",
    "MpiTypeCreateSubarray",
    "MpiTypeCreateResized",
    "MpiTypeDeleteAttr",
    "MpiTypeDup",
    "MpiTypeFree",
    "MpiTypeFreeKeyval",
    "MpiTypeF2c",
    "MpiTypeGetAttr",
    "MpiTypeGetContents",
    "MpiTypeGetEnvelope",
    "MpiTypeGetExtent",
    "MpiTypeGetExtentX",
    "MpiTypeGetName",
    "MpiTypeGetTrueExtent",
    "MpiTypeGetTrueExtentX",
    "MpiTypeIndexed",
    "MpiTypeMatchSize",
    "MpiTypeSetAttr",
    "MpiTypeSetName",
    "MpiTypeSize",
    "MpiTypeSizeX",
    "MpiTypeVector",
    "MpiUnpack",
    "MpiUnpublishName",
    "MpiUnpackExternal",
    "MpiWaitall",
    "MpiWaitany",
    "MpiWait",
    "MpiWaitsome",
    "MpiWinAllocate",
    "MpiWinAllocateShared",
    "MpiWinAttach",
    "MpiWinC2f",
    "MpiWinCallErrhandler",
    "MpiWinComplete",
    "MpiWinCreate",
    "MpiWinCreateDynamic",
    "MpiWinCreateErrhandler",
    "MpiWinCreateKeyval",
    "MpiWinDeleteAttr",
    "MpiWinDetach",
    "MpiWinF2c",
    "MpiWinFence",
    "MpiWinFlush",
    "MpiWinFlushAll",
    "MpiWinFlushLocal",
    "MpiWinFlushLocalAll",
    "MpiWinFree",
    "MpiWinFreeKeyval",
    "MpiWinGetAttr",
    "MpiWinGetErrhandler",
    "MpiWinGetGroup",
    "MpiWinGetInfo",
    "MpiWinGetName",
    "MpiWinLock",
    "MpiWinLockAll",
    "MpiWinPost",
    "MpiWinSetAttr",
    "MpiWinSetErrhandler",
    "MpiWinSetInfo",
    "MpiWinSetName",
    "MpiWinSharedQuery",
    "MpiWinStart",
    "MpiWinSync",
    "MpiWinTest",
    "MpiWinUnlock",
    "MpiWinUnlockAll",
    "MpiWinWait",
    "MpiWtick",
    "MpiWtime",
    nullptr
  };
  return names;
}

inline const char *EnumNamePrimitiveType(PrimitiveType e) {
  if (::flatbuffers::IsOutRange(e, PrimitiveType_MpiAbort, PrimitiveType_MpiWtime)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesPrimitiveType()[index];
}

struct PrimitiveInstance FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef PrimitiveInstanceBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_TYPE = 4,
    VT_AMODES = 6,
    VT_ARRAYOFBLOCKLENGTHS = 8,
    VT_ARRAYOFDISPLACEMENTS = 10,
    VT_ARRAYOFERRCODES = 12,
    VT_ARRAYOFINDICES = 14,
    VT_ARRAYOFINFO = 16,
    VT_ARRAYOFINTEGERS = 18,
    VT_ARRAYOFMAXPROCS = 20,
    VT_ARRAYOFREQUESTS = 22,
    VT_ARRAYOFSTATUSES = 24,
    VT_COMBINER = 26,
    VT_COMMS = 28,
    VT_COMMCART = 30,
    VT_COMMDISTGRAPH = 32,
    VT_COMMGRAPH = 34,
    VT_COMMKEYVALS = 36,
    VT_COMMUTES = 38,
    VT_COORDS = 40,
    VT_COUNTS = 42,
    VT_CSTATUS = 44,
    VT_DARGARRAY = 46,
    VT_DEGREES = 48,
    VT_DESTINATIONS = 50,
    VT_DESTWEIGHTS = 52,
    VT_DIMS = 54,
    VT_DISPLS = 56,
    VT_DISPUNITS = 58,
    VT_DISTRIBARRAY = 60,
    VT_EDGES = 62,
    VT_ERRORCLASSS = 64,
    VT_ERRORCODES = 66,
    VT_EXTENT = 68,
    VT_FLAGS = 70,
    VT_FSTATUS = 72,
    VT_GROUPS = 74,
    VT_GSIZEARRAY = 76,
    VT_INDEX = 78,
    VT_INNEIGHBORS = 80,
    VT_INTERCOMMS = 82,
    VT_LB = 84,
    VT_MESSAGES = 86,
    VT_NDIMSS = 88,
    VT_NEDGES = 90,
    VT_NEIGHBORS = 92,
    VT_NEWCOMM = 94,
    VT_NEWGROUP = 96,
    VT_NEWINTERCOMM = 98,
    VT_NEWRANK = 100,
    VT_NKEYS = 102,
    VT_NNEIGHBORS = 104,
    VT_NNODESS = 106,
    VT_NODES = 108,
    VT_NUMADDRESSES = 110,
    VT_NUMDATATYPES = 112,
    VT_NUMINTEGERS = 114,
    VT_OUTCOUNTS = 116,
    VT_OUTNEIGHBORS = 118,
    VT_PARENT = 120,
    VT_PERIODS = 122,
    VT_POSITION = 124,
    VT_PROVIDED = 126,
    VT_PSIZEARRAY = 128,
    VT_RANKS = 130,
    VT_RANKDEST = 132,
    VT_RANKSS = 134,
    VT_RANKS1 = 136,
    VT_RANKS2 = 138,
    VT_RANKSOURCE = 140,
    VT_RDISPLS = 142,
    VT_RECVCOUNTS = 144,
    VT_REMAINDIMS = 146,
    VT_REQUESTS = 148,
    VT_RESULT = 150,
    VT_RESULTLEN = 152,
    VT_SDISPLS = 154,
    VT_SENDCOUNTS = 156,
    VT_SIZES = 158,
    VT_SIZEARRAY = 160,
    VT_SOURCES = 162,
    VT_SOURCEWEIGHTS = 164,
    VT_STARTARRAY = 166,
    VT_STATUS = 168,
    VT_SUBSIZEARRAY = 170,
    VT_SUBVERSION = 172,
    VT_TARGETS = 174,
    VT_TRUEEXTENT = 176,
    VT_TRUELB = 178,
    VT_TYPEKEYVALS = 180,
    VT_VERSION = 182,
    VT_WEIGHTED = 184,
    VT_WEIGHTS = 186,
    VT_WINKEYVALS = 188,
    VT_ARGV = 190,
    VT_ARRAYOFARGV = 192,
    VT_ARRAYOFCOMMANDS = 194,
    VT_AMODE = 196,
    VT_BLOCKLENGTH = 198,
    VT_BRIDGECOMM = 200,
    VT_COLOR = 202,
    VT_COMM = 204,
    VT_COMM1 = 206,
    VT_COMM2 = 208,
    VT_COMMKEYVAL = 210,
    VT_COMMOLD = 212,
    VT_COMMUTE = 214,
    VT_COUNT = 216,
    VT_DATATYPE = 218,
    VT_DEST = 220,
    VT_DIRECTION = 222,
    VT_DISP = 224,
    VT_DISPUNIT = 226,
    VT_ERHANDLER = 228,
    VT_ERRHANDLER = 230,
    VT_ERRORCLASS = 232,
    VT_ERRORCODE = 234,
    VT_FD = 236,
    VT_FH = 238,
    VT_FILE = 240,
    VT_FLAG = 242,
    VT_GROUP = 244,
    VT_GROUP1 = 246,
    VT_GROUP2 = 248,
    VT_HIGH = 250,
    VT_INCOUNT = 252,
    VT_INDEGREE = 254,
    VT_INFO = 256,
    VT_INFOUSED = 258,
    VT_INSIZE = 260,
    VT_INTERCOMM = 262,
    VT_KEY = 264,
    VT_LOCALCOMM = 266,
    VT_LOCALLEADER = 268,
    VT_LOCKTYPE = 270,
    VT_MAXADDRESSES = 272,
    VT_MAXDATATYPES = 274,
    VT_MAXDIMS = 276,
    VT_MAXEDGES = 278,
    VT_MAXINDEGREE = 280,
    VT_MAXINDEX = 282,
    VT_MAXINTEGERS = 284,
    VT_MAXNEIGHBORS = 286,
    VT_MAXOUTDEGREE = 288,
    VT_MAXPROCS = 290,
    VT_MESSAGE = 292,
    VT_MPIASSERT = 294,
    VT_N = 296,
    VT_NDIMS = 298,
    VT_NEWINFO = 300,
    VT_NNODES = 302,
    VT_OLDCOMM = 304,
    VT_OP = 306,
    VT_ORDER = 308,
    VT_ORIGINCOUNT = 310,
    VT_OUTCOUNT = 312,
    VT_OUTDEGREE = 314,
    VT_OUTSIZE = 316,
    VT_P = 318,
    VT_R = 320,
    VT_RANK = 322,
    VT_RECVCOUNT = 324,
    VT_RECVTAG = 326,
    VT_REMOTELEADER = 328,
    VT_REORDER = 330,
    VT_REQUEST = 332,
    VT_RESULTCOUNT = 334,
    VT_ROOT = 336,
    VT_SENDCOUNT = 338,
    VT_SENDTAG = 340,
    VT_SIZE = 342,
    VT_SOURCE = 344,
    VT_SPLITTYPE = 346,
    VT_STRIDE = 348,
    VT_TAG = 350,
    VT_TARGETCOUNT = 352,
    VT_TARGETCOUT = 354,
    VT_TARGETRANK = 356,
    VT_TYPECLASS = 358,
    VT_TYPEKEYVAL = 360,
    VT_WHENCE = 362,
    VT_WIN = 364,
    VT_WINKEYVAL = 366,
    VT_CANCELFN = 368,
    VT_COMMAND = 370,
    VT_COMMCOPYATTRFN = 372,
    VT_COMMDELETEATTRFN = 374,
    VT_COMMNAME = 376,
    VT_DATAREP = 378,
    VT_DTYPEFILEEXTENTFN = 380,
    VT_FILENAME = 382,
    VT_FREEFN = 384,
    VT_FUNCTION = 386,
    VT_KEYS = 388,
    VT_NAME = 390,
    VT_PORTNAME = 392,
    VT_QUERYFN = 394,
    VT_READCONVERSIONFN = 396,
    VT_SERVICENAME = 398,
    VT_STRING = 400,
    VT_TYPECOPYATTRFN = 402,
    VT_TYPEDELETEATTRFN = 404,
    VT_TYPENAME_ = 406,
    VT_VALUE = 408,
    VT_VERSIONS = 410,
    VT_WINCOPYATTRFN = 412,
    VT_WINDELETEATTRFN = 414,
    VT_WINNAME = 416,
    VT_WRITECONVERSIONFN = 418
  };
  fbs::taz::profile::PrimitiveType type() const {
    return static_cast<fbs::taz::profile::PrimitiveType>(GetField<uint16_t>(VT_TYPE, 0));
  }
  const ::flatbuffers::Vector<int32_t> *amodes() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_AMODES);
  }
  const ::flatbuffers::Vector<int32_t> *arrayofblocklengths() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_ARRAYOFBLOCKLENGTHS);
  }
  const ::flatbuffers::Vector<int32_t> *arrayofdisplacements() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_ARRAYOFDISPLACEMENTS);
  }
  const ::flatbuffers::Vector<int32_t> *arrayoferrcodes() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_ARRAYOFERRCODES);
  }
  const ::flatbuffers::Vector<int32_t> *arrayofindices() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_ARRAYOFINDICES);
  }
  const ::flatbuffers::Vector<int32_t> *arrayofinfo() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_ARRAYOFINFO);
  }
  const ::flatbuffers::Vector<int32_t> *arrayofintegers() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_ARRAYOFINTEGERS);
  }
  const ::flatbuffers::Vector<int32_t> *arrayofmaxprocs() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_ARRAYOFMAXPROCS);
  }
  const ::flatbuffers::Vector<int32_t> *arrayofrequests() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_ARRAYOFREQUESTS);
  }
  const ::flatbuffers::Vector<int32_t> *arrayofstatuses() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_ARRAYOFSTATUSES);
  }
  const ::flatbuffers::Vector<int32_t> *combiner() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_COMBINER);
  }
  const ::flatbuffers::Vector<int32_t> *comms() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_COMMS);
  }
  const ::flatbuffers::Vector<int32_t> *commcart() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_COMMCART);
  }
  const ::flatbuffers::Vector<int32_t> *commdistgraph() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_COMMDISTGRAPH);
  }
  const ::flatbuffers::Vector<int32_t> *commgraph() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_COMMGRAPH);
  }
  const ::flatbuffers::Vector<int32_t> *commkeyvals() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_COMMKEYVALS);
  }
  const ::flatbuffers::Vector<int32_t> *commutes() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_COMMUTES);
  }
  const ::flatbuffers::Vector<int32_t> *coords() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_COORDS);
  }
  const ::flatbuffers::Vector<int32_t> *counts() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_COUNTS);
  }
  const ::flatbuffers::Vector<int32_t> *cstatus() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_CSTATUS);
  }
  const ::flatbuffers::Vector<int32_t> *dargarray() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_DARGARRAY);
  }
  const ::flatbuffers::Vector<int32_t> *degrees() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_DEGREES);
  }
  const ::flatbuffers::Vector<int32_t> *destinations() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_DESTINATIONS);
  }
  const ::flatbuffers::Vector<int32_t> *destweights() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_DESTWEIGHTS);
  }
  const ::flatbuffers::Vector<int32_t> *dims() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_DIMS);
  }
  const ::flatbuffers::Vector<int32_t> *displs() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_DISPLS);
  }
  const ::flatbuffers::Vector<int32_t> *dispunits() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_DISPUNITS);
  }
  const ::flatbuffers::Vector<int32_t> *distribarray() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_DISTRIBARRAY);
  }
  const ::flatbuffers::Vector<int32_t> *edges() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_EDGES);
  }
  const ::flatbuffers::Vector<int32_t> *errorclasss() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_ERRORCLASSS);
  }
  const ::flatbuffers::Vector<int32_t> *errorcodes() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_ERRORCODES);
  }
  const ::flatbuffers::Vector<int32_t> *extent() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_EXTENT);
  }
  const ::flatbuffers::Vector<int32_t> *flags() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_FLAGS);
  }
  const ::flatbuffers::Vector<int32_t> *fstatus() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_FSTATUS);
  }
  const ::flatbuffers::Vector<int32_t> *groups() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_GROUPS);
  }
  const ::flatbuffers::Vector<int32_t> *gsizearray() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_GSIZEARRAY);
  }
  const ::flatbuffers::Vector<int32_t> *index() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_INDEX);
  }
  const ::flatbuffers::Vector<int32_t> *inneighbors() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_INNEIGHBORS);
  }
  const ::flatbuffers::Vector<int32_t> *intercomms() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_INTERCOMMS);
  }
  const ::flatbuffers::Vector<int32_t> *lb() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_LB);
  }
  const ::flatbuffers::Vector<int32_t> *messages() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_MESSAGES);
  }
  const ::flatbuffers::Vector<int32_t> *ndimss() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NDIMSS);
  }
  const ::flatbuffers::Vector<int32_t> *nedges() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NEDGES);
  }
  const ::flatbuffers::Vector<int32_t> *neighbors() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NEIGHBORS);
  }
  const ::flatbuffers::Vector<int32_t> *newcomm() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NEWCOMM);
  }
  const ::flatbuffers::Vector<int32_t> *newgroup() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NEWGROUP);
  }
  const ::flatbuffers::Vector<int32_t> *newintercomm() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NEWINTERCOMM);
  }
  const ::flatbuffers::Vector<int32_t> *newrank() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NEWRANK);
  }
  const ::flatbuffers::Vector<int32_t> *nkeys() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NKEYS);
  }
  const ::flatbuffers::Vector<int32_t> *nneighbors() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NNEIGHBORS);
  }
  const ::flatbuffers::Vector<int32_t> *nnodess() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NNODESS);
  }
  const ::flatbuffers::Vector<int32_t> *nodes() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NODES);
  }
  const ::flatbuffers::Vector<int32_t> *numaddresses() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NUMADDRESSES);
  }
  const ::flatbuffers::Vector<int32_t> *numdatatypes() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NUMDATATYPES);
  }
  const ::flatbuffers::Vector<int32_t> *numintegers() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_NUMINTEGERS);
  }
  const ::flatbuffers::Vector<int32_t> *outcounts() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_OUTCOUNTS);
  }
  const ::flatbuffers::Vector<int32_t> *outneighbors() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_OUTNEIGHBORS);
  }
  const ::flatbuffers::Vector<int32_t> *parent() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_PARENT);
  }
  const ::flatbuffers::Vector<int32_t> *periods() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_PERIODS);
  }
  const ::flatbuffers::Vector<int32_t> *position() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_POSITION);
  }
  const ::flatbuffers::Vector<int32_t> *provided() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_PROVIDED);
  }
  const ::flatbuffers::Vector<int32_t> *psizearray() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_PSIZEARRAY);
  }
  const ::flatbuffers::Vector<int32_t> *ranks() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_RANKS);
  }
  const ::flatbuffers::Vector<int32_t> *rankdest() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_RANKDEST);
  }
  const ::flatbuffers::Vector<int32_t> *rankss() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_RANKSS);
  }
  const ::flatbuffers::Vector<int32_t> *ranks1() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_RANKS1);
  }
  const ::flatbuffers::Vector<int32_t> *ranks2() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_RANKS2);
  }
  const ::flatbuffers::Vector<int32_t> *ranksource() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_RANKSOURCE);
  }
  const ::flatbuffers::Vector<int32_t> *rdispls() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_RDISPLS);
  }
  const ::flatbuffers::Vector<int32_t> *recvcounts() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_RECVCOUNTS);
  }
  const ::flatbuffers::Vector<int32_t> *remaindims() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_REMAINDIMS);
  }
  const ::flatbuffers::Vector<int32_t> *requests() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_REQUESTS);
  }
  const ::flatbuffers::Vector<int32_t> *result() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_RESULT);
  }
  const ::flatbuffers::Vector<int32_t> *resultlen() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_RESULTLEN);
  }
  const ::flatbuffers::Vector<int32_t> *sdispls() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_SDISPLS);
  }
  const ::flatbuffers::Vector<int32_t> *sendcounts() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_SENDCOUNTS);
  }
  const ::flatbuffers::Vector<int32_t> *sizes() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_SIZES);
  }
  const ::flatbuffers::Vector<int32_t> *sizearray() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_SIZEARRAY);
  }
  const ::flatbuffers::Vector<int32_t> *sources() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_SOURCES);
  }
  const ::flatbuffers::Vector<int32_t> *sourceweights() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_SOURCEWEIGHTS);
  }
  const ::flatbuffers::Vector<int32_t> *startarray() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_STARTARRAY);
  }
  const ::flatbuffers::Vector<int32_t> *status() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_STATUS);
  }
  const ::flatbuffers::Vector<int32_t> *subsizearray() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_SUBSIZEARRAY);
  }
  const ::flatbuffers::Vector<int32_t> *subversion() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_SUBVERSION);
  }
  const ::flatbuffers::Vector<int32_t> *targets() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_TARGETS);
  }
  const ::flatbuffers::Vector<int32_t> *trueextent() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_TRUEEXTENT);
  }
  const ::flatbuffers::Vector<int32_t> *truelb() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_TRUELB);
  }
  const ::flatbuffers::Vector<int32_t> *typekeyvals() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_TYPEKEYVALS);
  }
  const ::flatbuffers::Vector<int32_t> *version() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_VERSION);
  }
  const ::flatbuffers::Vector<int32_t> *weighted() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_WEIGHTED);
  }
  const ::flatbuffers::Vector<int32_t> *weights() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_WEIGHTS);
  }
  const ::flatbuffers::Vector<int32_t> *winkeyvals() const {
    return GetPointer<const ::flatbuffers::Vector<int32_t> *>(VT_WINKEYVALS);
  }
  const ::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>> *argv() const {
    return GetPointer<const ::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>> *>(VT_ARGV);
  }
  const ::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>> *arrayofargv() const {
    return GetPointer<const ::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>> *>(VT_ARRAYOFARGV);
  }
  const ::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>> *arrayofcommands() const {
    return GetPointer<const ::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>> *>(VT_ARRAYOFCOMMANDS);
  }
  int32_t amode() const {
    return GetField<int32_t>(VT_AMODE, 0);
  }
  int32_t blocklength() const {
    return GetField<int32_t>(VT_BLOCKLENGTH, 0);
  }
  int32_t bridgecomm() const {
    return GetField<int32_t>(VT_BRIDGECOMM, 0);
  }
  int32_t color() const {
    return GetField<int32_t>(VT_COLOR, 0);
  }
  int32_t comm() const {
    return GetField<int32_t>(VT_COMM, 0);
  }
  int32_t comm1() const {
    return GetField<int32_t>(VT_COMM1, 0);
  }
  int32_t comm2() const {
    return GetField<int32_t>(VT_COMM2, 0);
  }
  int32_t commkeyval() const {
    return GetField<int32_t>(VT_COMMKEYVAL, 0);
  }
  int32_t commold() const {
    return GetField<int32_t>(VT_COMMOLD, 0);
  }
  int32_t commute() const {
    return GetField<int32_t>(VT_COMMUTE, 0);
  }
  int32_t count() const {
    return GetField<int32_t>(VT_COUNT, 0);
  }
  int32_t datatype() const {
    return GetField<int32_t>(VT_DATATYPE, 0);
  }
  int32_t dest() const {
    return GetField<int32_t>(VT_DEST, 0);
  }
  int32_t direction() const {
    return GetField<int32_t>(VT_DIRECTION, 0);
  }
  int32_t disp() const {
    return GetField<int32_t>(VT_DISP, 0);
  }
  int32_t dispunit() const {
    return GetField<int32_t>(VT_DISPUNIT, 0);
  }
  int32_t erhandler() const {
    return GetField<int32_t>(VT_ERHANDLER, 0);
  }
  int32_t errhandler() const {
    return GetField<int32_t>(VT_ERRHANDLER, 0);
  }
  int32_t errorclass() const {
    return GetField<int32_t>(VT_ERRORCLASS, 0);
  }
  int32_t errorcode() const {
    return GetField<int32_t>(VT_ERRORCODE, 0);
  }
  int32_t fd() const {
    return GetField<int32_t>(VT_FD, 0);
  }
  int32_t fh() const {
    return GetField<int32_t>(VT_FH, 0);
  }
  int32_t file() const {
    return GetField<int32_t>(VT_FILE, 0);
  }
  int32_t flag() const {
    return GetField<int32_t>(VT_FLAG, 0);
  }
  int32_t group() const {
    return GetField<int32_t>(VT_GROUP, 0);
  }
  int32_t group1() const {
    return GetField<int32_t>(VT_GROUP1, 0);
  }
  int32_t group2() const {
    return GetField<int32_t>(VT_GROUP2, 0);
  }
  int32_t high() const {
    return GetField<int32_t>(VT_HIGH, 0);
  }
  int32_t incount() const {
    return GetField<int32_t>(VT_INCOUNT, 0);
  }
  int32_t indegree() const {
    return GetField<int32_t>(VT_INDEGREE, 0);
  }
  int32_t info() const {
    return GetField<int32_t>(VT_INFO, 0);
  }
  int32_t infoused() const {
    return GetField<int32_t>(VT_INFOUSED, 0);
  }
  int32_t insize() const {
    return GetField<int32_t>(VT_INSIZE, 0);
  }
  int32_t intercomm() const {
    return GetField<int32_t>(VT_INTERCOMM, 0);
  }
  int32_t key() const {
    return GetField<int32_t>(VT_KEY, 0);
  }
  int32_t localcomm() const {
    return GetField<int32_t>(VT_LOCALCOMM, 0);
  }
  int32_t localleader() const {
    return GetField<int32_t>(VT_LOCALLEADER, 0);
  }
  int32_t locktype() const {
    return GetField<int32_t>(VT_LOCKTYPE, 0);
  }
  int32_t maxaddresses() const {
    return GetField<int32_t>(VT_MAXADDRESSES, 0);
  }
  int32_t maxdatatypes() const {
    return GetField<int32_t>(VT_MAXDATATYPES, 0);
  }
  int32_t maxdims() const {
    return GetField<int32_t>(VT_MAXDIMS, 0);
  }
  int32_t maxedges() const {
    return GetField<int32_t>(VT_MAXEDGES, 0);
  }
  int32_t maxindegree() const {
    return GetField<int32_t>(VT_MAXINDEGREE, 0);
  }
  int32_t maxindex() const {
    return GetField<int32_t>(VT_MAXINDEX, 0);
  }
  int32_t maxintegers() const {
    return GetField<int32_t>(VT_MAXINTEGERS, 0);
  }
  int32_t maxneighbors() const {
    return GetField<int32_t>(VT_MAXNEIGHBORS, 0);
  }
  int32_t maxoutdegree() const {
    return GetField<int32_t>(VT_MAXOUTDEGREE, 0);
  }
  int32_t maxprocs() const {
    return GetField<int32_t>(VT_MAXPROCS, 0);
  }
  int32_t message() const {
    return GetField<int32_t>(VT_MESSAGE, 0);
  }
  int32_t mpiassert() const {
    return GetField<int32_t>(VT_MPIASSERT, 0);
  }
  int32_t n() const {
    return GetField<int32_t>(VT_N, 0);
  }
  int32_t ndims() const {
    return GetField<int32_t>(VT_NDIMS, 0);
  }
  int32_t newinfo() const {
    return GetField<int32_t>(VT_NEWINFO, 0);
  }
  int32_t nnodes() const {
    return GetField<int32_t>(VT_NNODES, 0);
  }
  int32_t oldcomm() const {
    return GetField<int32_t>(VT_OLDCOMM, 0);
  }
  int32_t op() const {
    return GetField<int32_t>(VT_OP, 0);
  }
  int32_t order() const {
    return GetField<int32_t>(VT_ORDER, 0);
  }
  int32_t origincount() const {
    return GetField<int32_t>(VT_ORIGINCOUNT, 0);
  }
  int32_t outcount() const {
    return GetField<int32_t>(VT_OUTCOUNT, 0);
  }
  int32_t outdegree() const {
    return GetField<int32_t>(VT_OUTDEGREE, 0);
  }
  int32_t outsize() const {
    return GetField<int32_t>(VT_OUTSIZE, 0);
  }
  int32_t p() const {
    return GetField<int32_t>(VT_P, 0);
  }
  int32_t r() const {
    return GetField<int32_t>(VT_R, 0);
  }
  int32_t rank() const {
    return GetField<int32_t>(VT_RANK, 0);
  }
  int32_t recvcount() const {
    return GetField<int32_t>(VT_RECVCOUNT, 0);
  }
  int32_t recvtag() const {
    return GetField<int32_t>(VT_RECVTAG, 0);
  }
  int32_t remoteleader() const {
    return GetField<int32_t>(VT_REMOTELEADER, 0);
  }
  int32_t reorder() const {
    return GetField<int32_t>(VT_REORDER, 0);
  }
  int32_t request() const {
    return GetField<int32_t>(VT_REQUEST, 0);
  }
  int32_t resultcount() const {
    return GetField<int32_t>(VT_RESULTCOUNT, 0);
  }
  int32_t root() const {
    return GetField<int32_t>(VT_ROOT, 0);
  }
  int32_t sendcount() const {
    return GetField<int32_t>(VT_SENDCOUNT, 0);
  }
  int32_t sendtag() const {
    return GetField<int32_t>(VT_SENDTAG, 0);
  }
  int32_t size() const {
    return GetField<int32_t>(VT_SIZE, 0);
  }
  int32_t source() const {
    return GetField<int32_t>(VT_SOURCE, 0);
  }
  int32_t splittype() const {
    return GetField<int32_t>(VT_SPLITTYPE, 0);
  }
  int32_t stride() const {
    return GetField<int32_t>(VT_STRIDE, 0);
  }
  int32_t tag() const {
    return GetField<int32_t>(VT_TAG, 0);
  }
  int32_t targetcount() const {
    return GetField<int32_t>(VT_TARGETCOUNT, 0);
  }
  int32_t targetcout() const {
    return GetField<int32_t>(VT_TARGETCOUT, 0);
  }
  int32_t targetrank() const {
    return GetField<int32_t>(VT_TARGETRANK, 0);
  }
  int32_t typeclass() const {
    return GetField<int32_t>(VT_TYPECLASS, 0);
  }
  int32_t typekeyval() const {
    return GetField<int32_t>(VT_TYPEKEYVAL, 0);
  }
  int32_t whence() const {
    return GetField<int32_t>(VT_WHENCE, 0);
  }
  int32_t win() const {
    return GetField<int32_t>(VT_WIN, 0);
  }
  int32_t winkeyval() const {
    return GetField<int32_t>(VT_WINKEYVAL, 0);
  }
  const ::flatbuffers::String *cancelfn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_CANCELFN);
  }
  const ::flatbuffers::String *command() const {
    return GetPointer<const ::flatbuffers::String *>(VT_COMMAND);
  }
  const ::flatbuffers::String *commcopyattrfn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_COMMCOPYATTRFN);
  }
  const ::flatbuffers::String *commdeleteattrfn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_COMMDELETEATTRFN);
  }
  const ::flatbuffers::String *commname() const {
    return GetPointer<const ::flatbuffers::String *>(VT_COMMNAME);
  }
  const ::flatbuffers::String *datarep() const {
    return GetPointer<const ::flatbuffers::String *>(VT_DATAREP);
  }
  const ::flatbuffers::String *dtypefileextentfn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_DTYPEFILEEXTENTFN);
  }
  const ::flatbuffers::String *filename() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FILENAME);
  }
  const ::flatbuffers::String *freefn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FREEFN);
  }
  const ::flatbuffers::String *function() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FUNCTION);
  }
  const ::flatbuffers::String *keys() const {
    return GetPointer<const ::flatbuffers::String *>(VT_KEYS);
  }
  const ::flatbuffers::String *name() const {
    return GetPointer<const ::flatbuffers::String *>(VT_NAME);
  }
  const ::flatbuffers::String *portname() const {
    return GetPointer<const ::flatbuffers::String *>(VT_PORTNAME);
  }
  const ::flatbuffers::String *queryfn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_QUERYFN);
  }
  const ::flatbuffers::String *readconversionfn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_READCONVERSIONFN);
  }
  const ::flatbuffers::String *servicename() const {
    return GetPointer<const ::flatbuffers::String *>(VT_SERVICENAME);
  }
  const ::flatbuffers::String *string() const {
    return GetPointer<const ::flatbuffers::String *>(VT_STRING);
  }
  const ::flatbuffers::String *typecopyattrfn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_TYPECOPYATTRFN);
  }
  const ::flatbuffers::String *typedeleteattrfn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_TYPEDELETEATTRFN);
  }
  const ::flatbuffers::String *typename_() const {
    return GetPointer<const ::flatbuffers::String *>(VT_TYPENAME_);
  }
  const ::flatbuffers::String *value() const {
    return GetPointer<const ::flatbuffers::String *>(VT_VALUE);
  }
  const ::flatbuffers::String *versions() const {
    return GetPointer<const ::flatbuffers::String *>(VT_VERSIONS);
  }
  const ::flatbuffers::String *wincopyattrfn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_WINCOPYATTRFN);
  }
  const ::flatbuffers::String *windeleteattrfn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_WINDELETEATTRFN);
  }
  const ::flatbuffers::String *winname() const {
    return GetPointer<const ::flatbuffers::String *>(VT_WINNAME);
  }
  const ::flatbuffers::String *writeconversionfn() const {
    return GetPointer<const ::flatbuffers::String *>(VT_WRITECONVERSIONFN);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint16_t>(verifier, VT_TYPE, 2) &&
           VerifyOffset(verifier, VT_AMODES) &&
           verifier.VerifyVector(amodes()) &&
           VerifyOffset(verifier, VT_ARRAYOFBLOCKLENGTHS) &&
           verifier.VerifyVector(arrayofblocklengths()) &&
           VerifyOffset(verifier, VT_ARRAYOFDISPLACEMENTS) &&
           verifier.VerifyVector(arrayofdisplacements()) &&
           VerifyOffset(verifier, VT_ARRAYOFERRCODES) &&
           verifier.VerifyVector(arrayoferrcodes()) &&
           VerifyOffset(verifier, VT_ARRAYOFINDICES) &&
           verifier.VerifyVector(arrayofindices()) &&
           VerifyOffset(verifier, VT_ARRAYOFINFO) &&
           verifier.VerifyVector(arrayofinfo()) &&
           VerifyOffset(verifier, VT_ARRAYOFINTEGERS) &&
           verifier.VerifyVector(arrayofintegers()) &&
           VerifyOffset(verifier, VT_ARRAYOFMAXPROCS) &&
           verifier.VerifyVector(arrayofmaxprocs()) &&
           VerifyOffset(verifier, VT_ARRAYOFREQUESTS) &&
           verifier.VerifyVector(arrayofrequests()) &&
           VerifyOffset(verifier, VT_ARRAYOFSTATUSES) &&
           verifier.VerifyVector(arrayofstatuses()) &&
           VerifyOffset(verifier, VT_COMBINER) &&
           verifier.VerifyVector(combiner()) &&
           VerifyOffset(verifier, VT_COMMS) &&
           verifier.VerifyVector(comms()) &&
           VerifyOffset(verifier, VT_COMMCART) &&
           verifier.VerifyVector(commcart()) &&
           VerifyOffset(verifier, VT_COMMDISTGRAPH) &&
           verifier.VerifyVector(commdistgraph()) &&
           VerifyOffset(verifier, VT_COMMGRAPH) &&
           verifier.VerifyVector(commgraph()) &&
           VerifyOffset(verifier, VT_COMMKEYVALS) &&
           verifier.VerifyVector(commkeyvals()) &&
           VerifyOffset(verifier, VT_COMMUTES) &&
           verifier.VerifyVector(commutes()) &&
           VerifyOffset(verifier, VT_COORDS) &&
           verifier.VerifyVector(coords()) &&
           VerifyOffset(verifier, VT_COUNTS) &&
           verifier.VerifyVector(counts()) &&
           VerifyOffset(verifier, VT_CSTATUS) &&
           verifier.VerifyVector(cstatus()) &&
           VerifyOffset(verifier, VT_DARGARRAY) &&
           verifier.VerifyVector(dargarray()) &&
           VerifyOffset(verifier, VT_DEGREES) &&
           verifier.VerifyVector(degrees()) &&
           VerifyOffset(verifier, VT_DESTINATIONS) &&
           verifier.VerifyVector(destinations()) &&
           VerifyOffset(verifier, VT_DESTWEIGHTS) &&
           verifier.VerifyVector(destweights()) &&
           VerifyOffset(verifier, VT_DIMS) &&
           verifier.VerifyVector(dims()) &&
           VerifyOffset(verifier, VT_DISPLS) &&
           verifier.VerifyVector(displs()) &&
           VerifyOffset(verifier, VT_DISPUNITS) &&
           verifier.VerifyVector(dispunits()) &&
           VerifyOffset(verifier, VT_DISTRIBARRAY) &&
           verifier.VerifyVector(distribarray()) &&
           VerifyOffset(verifier, VT_EDGES) &&
           verifier.VerifyVector(edges()) &&
           VerifyOffset(verifier, VT_ERRORCLASSS) &&
           verifier.VerifyVector(errorclasss()) &&
           VerifyOffset(verifier, VT_ERRORCODES) &&
           verifier.VerifyVector(errorcodes()) &&
           VerifyOffset(verifier, VT_EXTENT) &&
           verifier.VerifyVector(extent()) &&
           VerifyOffset(verifier, VT_FLAGS) &&
           verifier.VerifyVector(flags()) &&
           VerifyOffset(verifier, VT_FSTATUS) &&
           verifier.VerifyVector(fstatus()) &&
           VerifyOffset(verifier, VT_GROUPS) &&
           verifier.VerifyVector(groups()) &&
           VerifyOffset(verifier, VT_GSIZEARRAY) &&
           verifier.VerifyVector(gsizearray()) &&
           VerifyOffset(verifier, VT_INDEX) &&
           verifier.VerifyVector(index()) &&
           VerifyOffset(verifier, VT_INNEIGHBORS) &&
           verifier.VerifyVector(inneighbors()) &&
           VerifyOffset(verifier, VT_INTERCOMMS) &&
           verifier.VerifyVector(intercomms()) &&
           VerifyOffset(verifier, VT_LB) &&
           verifier.VerifyVector(lb()) &&
           VerifyOffset(verifier, VT_MESSAGES) &&
           verifier.VerifyVector(messages()) &&
           VerifyOffset(verifier, VT_NDIMSS) &&
           verifier.VerifyVector(ndimss()) &&
           VerifyOffset(verifier, VT_NEDGES) &&
           verifier.VerifyVector(nedges()) &&
           VerifyOffset(verifier, VT_NEIGHBORS) &&
           verifier.VerifyVector(neighbors()) &&
           VerifyOffset(verifier, VT_NEWCOMM) &&
           verifier.VerifyVector(newcomm()) &&
           VerifyOffset(verifier, VT_NEWGROUP) &&
           verifier.VerifyVector(newgroup()) &&
           VerifyOffset(verifier, VT_NEWINTERCOMM) &&
           verifier.VerifyVector(newintercomm()) &&
           VerifyOffset(verifier, VT_NEWRANK) &&
           verifier.VerifyVector(newrank()) &&
           VerifyOffset(verifier, VT_NKEYS) &&
           verifier.VerifyVector(nkeys()) &&
           VerifyOffset(verifier, VT_NNEIGHBORS) &&
           verifier.VerifyVector(nneighbors()) &&
           VerifyOffset(verifier, VT_NNODESS) &&
           verifier.VerifyVector(nnodess()) &&
           VerifyOffset(verifier, VT_NODES) &&
           verifier.VerifyVector(nodes()) &&
           VerifyOffset(verifier, VT_NUMADDRESSES) &&
           verifier.VerifyVector(numaddresses()) &&
           VerifyOffset(verifier, VT_NUMDATATYPES) &&
           verifier.VerifyVector(numdatatypes()) &&
           VerifyOffset(verifier, VT_NUMINTEGERS) &&
           verifier.VerifyVector(numintegers()) &&
           VerifyOffset(verifier, VT_OUTCOUNTS) &&
           verifier.VerifyVector(outcounts()) &&
           VerifyOffset(verifier, VT_OUTNEIGHBORS) &&
           verifier.VerifyVector(outneighbors()) &&
           VerifyOffset(verifier, VT_PARENT) &&
           verifier.VerifyVector(parent()) &&
           VerifyOffset(verifier, VT_PERIODS) &&
           verifier.VerifyVector(periods()) &&
           VerifyOffset(verifier, VT_POSITION) &&
           verifier.VerifyVector(position()) &&
           VerifyOffset(verifier, VT_PROVIDED) &&
           verifier.VerifyVector(provided()) &&
           VerifyOffset(verifier, VT_PSIZEARRAY) &&
           verifier.VerifyVector(psizearray()) &&
           VerifyOffset(verifier, VT_RANKS) &&
           verifier.VerifyVector(ranks()) &&
           VerifyOffset(verifier, VT_RANKDEST) &&
           verifier.VerifyVector(rankdest()) &&
           VerifyOffset(verifier, VT_RANKSS) &&
           verifier.VerifyVector(rankss()) &&
           VerifyOffset(verifier, VT_RANKS1) &&
           verifier.VerifyVector(ranks1()) &&
           VerifyOffset(verifier, VT_RANKS2) &&
           verifier.VerifyVector(ranks2()) &&
           VerifyOffset(verifier, VT_RANKSOURCE) &&
           verifier.VerifyVector(ranksource()) &&
           VerifyOffset(verifier, VT_RDISPLS) &&
           verifier.VerifyVector(rdispls()) &&
           VerifyOffset(verifier, VT_RECVCOUNTS) &&
           verifier.VerifyVector(recvcounts()) &&
           VerifyOffset(verifier, VT_REMAINDIMS) &&
           verifier.VerifyVector(remaindims()) &&
           VerifyOffset(verifier, VT_REQUESTS) &&
           verifier.VerifyVector(requests()) &&
           VerifyOffset(verifier, VT_RESULT) &&
           verifier.VerifyVector(result()) &&
           VerifyOffset(verifier, VT_RESULTLEN) &&
           verifier.VerifyVector(resultlen()) &&
           VerifyOffset(verifier, VT_SDISPLS) &&
           verifier.VerifyVector(sdispls()) &&
           VerifyOffset(verifier, VT_SENDCOUNTS) &&
           verifier.VerifyVector(sendcounts()) &&
           VerifyOffset(verifier, VT_SIZES) &&
           verifier.VerifyVector(sizes()) &&
           VerifyOffset(verifier, VT_SIZEARRAY) &&
           verifier.VerifyVector(sizearray()) &&
           VerifyOffset(verifier, VT_SOURCES) &&
           verifier.VerifyVector(sources()) &&
           VerifyOffset(verifier, VT_SOURCEWEIGHTS) &&
           verifier.VerifyVector(sourceweights()) &&
           VerifyOffset(verifier, VT_STARTARRAY) &&
           verifier.VerifyVector(startarray()) &&
           VerifyOffset(verifier, VT_STATUS) &&
           verifier.VerifyVector(status()) &&
           VerifyOffset(verifier, VT_SUBSIZEARRAY) &&
           verifier.VerifyVector(subsizearray()) &&
           VerifyOffset(verifier, VT_SUBVERSION) &&
           verifier.VerifyVector(subversion()) &&
           VerifyOffset(verifier, VT_TARGETS) &&
           verifier.VerifyVector(targets()) &&
           VerifyOffset(verifier, VT_TRUEEXTENT) &&
           verifier.VerifyVector(trueextent()) &&
           VerifyOffset(verifier, VT_TRUELB) &&
           verifier.VerifyVector(truelb()) &&
           VerifyOffset(verifier, VT_TYPEKEYVALS) &&
           verifier.VerifyVector(typekeyvals()) &&
           VerifyOffset(verifier, VT_VERSION) &&
           verifier.VerifyVector(version()) &&
           VerifyOffset(verifier, VT_WEIGHTED) &&
           verifier.VerifyVector(weighted()) &&
           VerifyOffset(verifier, VT_WEIGHTS) &&
           verifier.VerifyVector(weights()) &&
           VerifyOffset(verifier, VT_WINKEYVALS) &&
           verifier.VerifyVector(winkeyvals()) &&
           VerifyOffset(verifier, VT_ARGV) &&
           verifier.VerifyVector(argv()) &&
           verifier.VerifyVectorOfStrings(argv()) &&
           VerifyOffset(verifier, VT_ARRAYOFARGV) &&
           verifier.VerifyVector(arrayofargv()) &&
           verifier.VerifyVectorOfStrings(arrayofargv()) &&
           VerifyOffset(verifier, VT_ARRAYOFCOMMANDS) &&
           verifier.VerifyVector(arrayofcommands()) &&
           verifier.VerifyVectorOfStrings(arrayofcommands()) &&
           VerifyField<int32_t>(verifier, VT_AMODE, 4) &&
           VerifyField<int32_t>(verifier, VT_BLOCKLENGTH, 4) &&
           VerifyField<int32_t>(verifier, VT_BRIDGECOMM, 4) &&
           VerifyField<int32_t>(verifier, VT_COLOR, 4) &&
           VerifyField<int32_t>(verifier, VT_COMM, 4) &&
           VerifyField<int32_t>(verifier, VT_COMM1, 4) &&
           VerifyField<int32_t>(verifier, VT_COMM2, 4) &&
           VerifyField<int32_t>(verifier, VT_COMMKEYVAL, 4) &&
           VerifyField<int32_t>(verifier, VT_COMMOLD, 4) &&
           VerifyField<int32_t>(verifier, VT_COMMUTE, 4) &&
           VerifyField<int32_t>(verifier, VT_COUNT, 4) &&
           VerifyField<int32_t>(verifier, VT_DATATYPE, 4) &&
           VerifyField<int32_t>(verifier, VT_DEST, 4) &&
           VerifyField<int32_t>(verifier, VT_DIRECTION, 4) &&
           VerifyField<int32_t>(verifier, VT_DISP, 4) &&
           VerifyField<int32_t>(verifier, VT_DISPUNIT, 4) &&
           VerifyField<int32_t>(verifier, VT_ERHANDLER, 4) &&
           VerifyField<int32_t>(verifier, VT_ERRHANDLER, 4) &&
           VerifyField<int32_t>(verifier, VT_ERRORCLASS, 4) &&
           VerifyField<int32_t>(verifier, VT_ERRORCODE, 4) &&
           VerifyField<int32_t>(verifier, VT_FD, 4) &&
           VerifyField<int32_t>(verifier, VT_FH, 4) &&
           VerifyField<int32_t>(verifier, VT_FILE, 4) &&
           VerifyField<int32_t>(verifier, VT_FLAG, 4) &&
           VerifyField<int32_t>(verifier, VT_GROUP, 4) &&
           VerifyField<int32_t>(verifier, VT_GROUP1, 4) &&
           VerifyField<int32_t>(verifier, VT_GROUP2, 4) &&
           VerifyField<int32_t>(verifier, VT_HIGH, 4) &&
           VerifyField<int32_t>(verifier, VT_INCOUNT, 4) &&
           VerifyField<int32_t>(verifier, VT_INDEGREE, 4) &&
           VerifyField<int32_t>(verifier, VT_INFO, 4) &&
           VerifyField<int32_t>(verifier, VT_INFOUSED, 4) &&
           VerifyField<int32_t>(verifier, VT_INSIZE, 4) &&
           VerifyField<int32_t>(verifier, VT_INTERCOMM, 4) &&
           VerifyField<int32_t>(verifier, VT_KEY, 4) &&
           VerifyField<int32_t>(verifier, VT_LOCALCOMM, 4) &&
           VerifyField<int32_t>(verifier, VT_LOCALLEADER, 4) &&
           VerifyField<int32_t>(verifier, VT_LOCKTYPE, 4) &&
           VerifyField<int32_t>(verifier, VT_MAXADDRESSES, 4) &&
           VerifyField<int32_t>(verifier, VT_MAXDATATYPES, 4) &&
           VerifyField<int32_t>(verifier, VT_MAXDIMS, 4) &&
           VerifyField<int32_t>(verifier, VT_MAXEDGES, 4) &&
           VerifyField<int32_t>(verifier, VT_MAXINDEGREE, 4) &&
           VerifyField<int32_t>(verifier, VT_MAXINDEX, 4) &&
           VerifyField<int32_t>(verifier, VT_MAXINTEGERS, 4) &&
           VerifyField<int32_t>(verifier, VT_MAXNEIGHBORS, 4) &&
           VerifyField<int32_t>(verifier, VT_MAXOUTDEGREE, 4) &&
           VerifyField<int32_t>(verifier, VT_MAXPROCS, 4) &&
           VerifyField<int32_t>(verifier, VT_MESSAGE, 4) &&
           VerifyField<int32_t>(verifier, VT_MPIASSERT, 4) &&
           VerifyField<int32_t>(verifier, VT_N, 4) &&
           VerifyField<int32_t>(verifier, VT_NDIMS, 4) &&
           VerifyField<int32_t>(verifier, VT_NEWINFO, 4) &&
           VerifyField<int32_t>(verifier, VT_NNODES, 4) &&
           VerifyField<int32_t>(verifier, VT_OLDCOMM, 4) &&
           VerifyField<int32_t>(verifier, VT_OP, 4) &&
           VerifyField<int32_t>(verifier, VT_ORDER, 4) &&
           VerifyField<int32_t>(verifier, VT_ORIGINCOUNT, 4) &&
           VerifyField<int32_t>(verifier, VT_OUTCOUNT, 4) &&
           VerifyField<int32_t>(verifier, VT_OUTDEGREE, 4) &&
           VerifyField<int32_t>(verifier, VT_OUTSIZE, 4) &&
           VerifyField<int32_t>(verifier, VT_P, 4) &&
           VerifyField<int32_t>(verifier, VT_R, 4) &&
           VerifyField<int32_t>(verifier, VT_RANK, 4) &&
           VerifyField<int32_t>(verifier, VT_RECVCOUNT, 4) &&
           VerifyField<int32_t>(verifier, VT_RECVTAG, 4) &&
           VerifyField<int32_t>(verifier, VT_REMOTELEADER, 4) &&
           VerifyField<int32_t>(verifier, VT_REORDER, 4) &&
           VerifyField<int32_t>(verifier, VT_REQUEST, 4) &&
           VerifyField<int32_t>(verifier, VT_RESULTCOUNT, 4) &&
           VerifyField<int32_t>(verifier, VT_ROOT, 4) &&
           VerifyField<int32_t>(verifier, VT_SENDCOUNT, 4) &&
           VerifyField<int32_t>(verifier, VT_SENDTAG, 4) &&
           VerifyField<int32_t>(verifier, VT_SIZE, 4) &&
           VerifyField<int32_t>(verifier, VT_SOURCE, 4) &&
           VerifyField<int32_t>(verifier, VT_SPLITTYPE, 4) &&
           VerifyField<int32_t>(verifier, VT_STRIDE, 4) &&
           VerifyField<int32_t>(verifier, VT_TAG, 4) &&
           VerifyField<int32_t>(verifier, VT_TARGETCOUNT, 4) &&
           VerifyField<int32_t>(verifier, VT_TARGETCOUT, 4) &&
           VerifyField<int32_t>(verifier, VT_TARGETRANK, 4) &&
           VerifyField<int32_t>(verifier, VT_TYPECLASS, 4) &&
           VerifyField<int32_t>(verifier, VT_TYPEKEYVAL, 4) &&
           VerifyField<int32_t>(verifier, VT_WHENCE, 4) &&
           VerifyField<int32_t>(verifier, VT_WIN, 4) &&
           VerifyField<int32_t>(verifier, VT_WINKEYVAL, 4) &&
           VerifyOffset(verifier, VT_CANCELFN) &&
           verifier.VerifyString(cancelfn()) &&
           VerifyOffset(verifier, VT_COMMAND) &&
           verifier.VerifyString(command()) &&
           VerifyOffset(verifier, VT_COMMCOPYATTRFN) &&
           verifier.VerifyString(commcopyattrfn()) &&
           VerifyOffset(verifier, VT_COMMDELETEATTRFN) &&
           verifier.VerifyString(commdeleteattrfn()) &&
           VerifyOffset(verifier, VT_COMMNAME) &&
           verifier.VerifyString(commname()) &&
           VerifyOffset(verifier, VT_DATAREP) &&
           verifier.VerifyString(datarep()) &&
           VerifyOffset(verifier, VT_DTYPEFILEEXTENTFN) &&
           verifier.VerifyString(dtypefileextentfn()) &&
           VerifyOffset(verifier, VT_FILENAME) &&
           verifier.VerifyString(filename()) &&
           VerifyOffset(verifier, VT_FREEFN) &&
           verifier.VerifyString(freefn()) &&
           VerifyOffset(verifier, VT_FUNCTION) &&
           verifier.VerifyString(function()) &&
           VerifyOffset(verifier, VT_KEYS) &&
           verifier.VerifyString(keys()) &&
           VerifyOffset(verifier, VT_NAME) &&
           verifier.VerifyString(name()) &&
           VerifyOffset(verifier, VT_PORTNAME) &&
           verifier.VerifyString(portname()) &&
           VerifyOffset(verifier, VT_QUERYFN) &&
           verifier.VerifyString(queryfn()) &&
           VerifyOffset(verifier, VT_READCONVERSIONFN) &&
           verifier.VerifyString(readconversionfn()) &&
           VerifyOffset(verifier, VT_SERVICENAME) &&
           verifier.VerifyString(servicename()) &&
           VerifyOffset(verifier, VT_STRING) &&
           verifier.VerifyString(string()) &&
           VerifyOffset(verifier, VT_TYPECOPYATTRFN) &&
           verifier.VerifyString(typecopyattrfn()) &&
           VerifyOffset(verifier, VT_TYPEDELETEATTRFN) &&
           verifier.VerifyString(typedeleteattrfn()) &&
           VerifyOffset(verifier, VT_TYPENAME_) &&
           verifier.VerifyString(typename_()) &&
           VerifyOffset(verifier, VT_VALUE) &&
           verifier.VerifyString(value()) &&
           VerifyOffset(verifier, VT_VERSIONS) &&
           verifier.VerifyString(versions()) &&
           VerifyOffset(verifier, VT_WINCOPYATTRFN) &&
           verifier.VerifyString(wincopyattrfn()) &&
           VerifyOffset(verifier, VT_WINDELETEATTRFN) &&
           verifier.VerifyString(windeleteattrfn()) &&
           VerifyOffset(verifier, VT_WINNAME) &&
           verifier.VerifyString(winname()) &&
           VerifyOffset(verifier, VT_WRITECONVERSIONFN) &&
           verifier.VerifyString(writeconversionfn()) &&
           verifier.EndTable();
  }
};

struct PrimitiveInstanceBuilder {
  typedef PrimitiveInstance Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_type(fbs::taz::profile::PrimitiveType type) {
    fbb_.AddElement<uint16_t>(PrimitiveInstance::VT_TYPE, static_cast<uint16_t>(type), 0);
  }
  void add_amodes(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> amodes) {
    fbb_.AddOffset(PrimitiveInstance::VT_AMODES, amodes);
  }
  void add_arrayofblocklengths(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofblocklengths) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARRAYOFBLOCKLENGTHS, arrayofblocklengths);
  }
  void add_arrayofdisplacements(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofdisplacements) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARRAYOFDISPLACEMENTS, arrayofdisplacements);
  }
  void add_arrayoferrcodes(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayoferrcodes) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARRAYOFERRCODES, arrayoferrcodes);
  }
  void add_arrayofindices(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofindices) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARRAYOFINDICES, arrayofindices);
  }
  void add_arrayofinfo(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofinfo) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARRAYOFINFO, arrayofinfo);
  }
  void add_arrayofintegers(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofintegers) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARRAYOFINTEGERS, arrayofintegers);
  }
  void add_arrayofmaxprocs(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofmaxprocs) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARRAYOFMAXPROCS, arrayofmaxprocs);
  }
  void add_arrayofrequests(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofrequests) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARRAYOFREQUESTS, arrayofrequests);
  }
  void add_arrayofstatuses(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofstatuses) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARRAYOFSTATUSES, arrayofstatuses);
  }
  void add_combiner(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> combiner) {
    fbb_.AddOffset(PrimitiveInstance::VT_COMBINER, combiner);
  }
  void add_comms(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> comms) {
    fbb_.AddOffset(PrimitiveInstance::VT_COMMS, comms);
  }
  void add_commcart(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> commcart) {
    fbb_.AddOffset(PrimitiveInstance::VT_COMMCART, commcart);
  }
  void add_commdistgraph(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> commdistgraph) {
    fbb_.AddOffset(PrimitiveInstance::VT_COMMDISTGRAPH, commdistgraph);
  }
  void add_commgraph(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> commgraph) {
    fbb_.AddOffset(PrimitiveInstance::VT_COMMGRAPH, commgraph);
  }
  void add_commkeyvals(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> commkeyvals) {
    fbb_.AddOffset(PrimitiveInstance::VT_COMMKEYVALS, commkeyvals);
  }
  void add_commutes(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> commutes) {
    fbb_.AddOffset(PrimitiveInstance::VT_COMMUTES, commutes);
  }
  void add_coords(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> coords) {
    fbb_.AddOffset(PrimitiveInstance::VT_COORDS, coords);
  }
  void add_counts(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> counts) {
    fbb_.AddOffset(PrimitiveInstance::VT_COUNTS, counts);
  }
  void add_cstatus(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> cstatus) {
    fbb_.AddOffset(PrimitiveInstance::VT_CSTATUS, cstatus);
  }
  void add_dargarray(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> dargarray) {
    fbb_.AddOffset(PrimitiveInstance::VT_DARGARRAY, dargarray);
  }
  void add_degrees(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> degrees) {
    fbb_.AddOffset(PrimitiveInstance::VT_DEGREES, degrees);
  }
  void add_destinations(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> destinations) {
    fbb_.AddOffset(PrimitiveInstance::VT_DESTINATIONS, destinations);
  }
  void add_destweights(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> destweights) {
    fbb_.AddOffset(PrimitiveInstance::VT_DESTWEIGHTS, destweights);
  }
  void add_dims(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> dims) {
    fbb_.AddOffset(PrimitiveInstance::VT_DIMS, dims);
  }
  void add_displs(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> displs) {
    fbb_.AddOffset(PrimitiveInstance::VT_DISPLS, displs);
  }
  void add_dispunits(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> dispunits) {
    fbb_.AddOffset(PrimitiveInstance::VT_DISPUNITS, dispunits);
  }
  void add_distribarray(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> distribarray) {
    fbb_.AddOffset(PrimitiveInstance::VT_DISTRIBARRAY, distribarray);
  }
  void add_edges(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> edges) {
    fbb_.AddOffset(PrimitiveInstance::VT_EDGES, edges);
  }
  void add_errorclasss(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> errorclasss) {
    fbb_.AddOffset(PrimitiveInstance::VT_ERRORCLASSS, errorclasss);
  }
  void add_errorcodes(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> errorcodes) {
    fbb_.AddOffset(PrimitiveInstance::VT_ERRORCODES, errorcodes);
  }
  void add_extent(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> extent) {
    fbb_.AddOffset(PrimitiveInstance::VT_EXTENT, extent);
  }
  void add_flags(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> flags) {
    fbb_.AddOffset(PrimitiveInstance::VT_FLAGS, flags);
  }
  void add_fstatus(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> fstatus) {
    fbb_.AddOffset(PrimitiveInstance::VT_FSTATUS, fstatus);
  }
  void add_groups(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> groups) {
    fbb_.AddOffset(PrimitiveInstance::VT_GROUPS, groups);
  }
  void add_gsizearray(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> gsizearray) {
    fbb_.AddOffset(PrimitiveInstance::VT_GSIZEARRAY, gsizearray);
  }
  void add_index(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> index) {
    fbb_.AddOffset(PrimitiveInstance::VT_INDEX, index);
  }
  void add_inneighbors(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> inneighbors) {
    fbb_.AddOffset(PrimitiveInstance::VT_INNEIGHBORS, inneighbors);
  }
  void add_intercomms(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> intercomms) {
    fbb_.AddOffset(PrimitiveInstance::VT_INTERCOMMS, intercomms);
  }
  void add_lb(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> lb) {
    fbb_.AddOffset(PrimitiveInstance::VT_LB, lb);
  }
  void add_messages(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> messages) {
    fbb_.AddOffset(PrimitiveInstance::VT_MESSAGES, messages);
  }
  void add_ndimss(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> ndimss) {
    fbb_.AddOffset(PrimitiveInstance::VT_NDIMSS, ndimss);
  }
  void add_nedges(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> nedges) {
    fbb_.AddOffset(PrimitiveInstance::VT_NEDGES, nedges);
  }
  void add_neighbors(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> neighbors) {
    fbb_.AddOffset(PrimitiveInstance::VT_NEIGHBORS, neighbors);
  }
  void add_newcomm(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> newcomm) {
    fbb_.AddOffset(PrimitiveInstance::VT_NEWCOMM, newcomm);
  }
  void add_newgroup(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> newgroup) {
    fbb_.AddOffset(PrimitiveInstance::VT_NEWGROUP, newgroup);
  }
  void add_newintercomm(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> newintercomm) {
    fbb_.AddOffset(PrimitiveInstance::VT_NEWINTERCOMM, newintercomm);
  }
  void add_newrank(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> newrank) {
    fbb_.AddOffset(PrimitiveInstance::VT_NEWRANK, newrank);
  }
  void add_nkeys(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> nkeys) {
    fbb_.AddOffset(PrimitiveInstance::VT_NKEYS, nkeys);
  }
  void add_nneighbors(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> nneighbors) {
    fbb_.AddOffset(PrimitiveInstance::VT_NNEIGHBORS, nneighbors);
  }
  void add_nnodess(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> nnodess) {
    fbb_.AddOffset(PrimitiveInstance::VT_NNODESS, nnodess);
  }
  void add_nodes(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> nodes) {
    fbb_.AddOffset(PrimitiveInstance::VT_NODES, nodes);
  }
  void add_numaddresses(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> numaddresses) {
    fbb_.AddOffset(PrimitiveInstance::VT_NUMADDRESSES, numaddresses);
  }
  void add_numdatatypes(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> numdatatypes) {
    fbb_.AddOffset(PrimitiveInstance::VT_NUMDATATYPES, numdatatypes);
  }
  void add_numintegers(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> numintegers) {
    fbb_.AddOffset(PrimitiveInstance::VT_NUMINTEGERS, numintegers);
  }
  void add_outcounts(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> outcounts) {
    fbb_.AddOffset(PrimitiveInstance::VT_OUTCOUNTS, outcounts);
  }
  void add_outneighbors(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> outneighbors) {
    fbb_.AddOffset(PrimitiveInstance::VT_OUTNEIGHBORS, outneighbors);
  }
  void add_parent(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> parent) {
    fbb_.AddOffset(PrimitiveInstance::VT_PARENT, parent);
  }
  void add_periods(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> periods) {
    fbb_.AddOffset(PrimitiveInstance::VT_PERIODS, periods);
  }
  void add_position(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> position) {
    fbb_.AddOffset(PrimitiveInstance::VT_POSITION, position);
  }
  void add_provided(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> provided) {
    fbb_.AddOffset(PrimitiveInstance::VT_PROVIDED, provided);
  }
  void add_psizearray(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> psizearray) {
    fbb_.AddOffset(PrimitiveInstance::VT_PSIZEARRAY, psizearray);
  }
  void add_ranks(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> ranks) {
    fbb_.AddOffset(PrimitiveInstance::VT_RANKS, ranks);
  }
  void add_rankdest(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> rankdest) {
    fbb_.AddOffset(PrimitiveInstance::VT_RANKDEST, rankdest);
  }
  void add_rankss(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> rankss) {
    fbb_.AddOffset(PrimitiveInstance::VT_RANKSS, rankss);
  }
  void add_ranks1(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> ranks1) {
    fbb_.AddOffset(PrimitiveInstance::VT_RANKS1, ranks1);
  }
  void add_ranks2(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> ranks2) {
    fbb_.AddOffset(PrimitiveInstance::VT_RANKS2, ranks2);
  }
  void add_ranksource(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> ranksource) {
    fbb_.AddOffset(PrimitiveInstance::VT_RANKSOURCE, ranksource);
  }
  void add_rdispls(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> rdispls) {
    fbb_.AddOffset(PrimitiveInstance::VT_RDISPLS, rdispls);
  }
  void add_recvcounts(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> recvcounts) {
    fbb_.AddOffset(PrimitiveInstance::VT_RECVCOUNTS, recvcounts);
  }
  void add_remaindims(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> remaindims) {
    fbb_.AddOffset(PrimitiveInstance::VT_REMAINDIMS, remaindims);
  }
  void add_requests(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> requests) {
    fbb_.AddOffset(PrimitiveInstance::VT_REQUESTS, requests);
  }
  void add_result(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> result) {
    fbb_.AddOffset(PrimitiveInstance::VT_RESULT, result);
  }
  void add_resultlen(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> resultlen) {
    fbb_.AddOffset(PrimitiveInstance::VT_RESULTLEN, resultlen);
  }
  void add_sdispls(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sdispls) {
    fbb_.AddOffset(PrimitiveInstance::VT_SDISPLS, sdispls);
  }
  void add_sendcounts(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sendcounts) {
    fbb_.AddOffset(PrimitiveInstance::VT_SENDCOUNTS, sendcounts);
  }
  void add_sizes(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sizes) {
    fbb_.AddOffset(PrimitiveInstance::VT_SIZES, sizes);
  }
  void add_sizearray(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sizearray) {
    fbb_.AddOffset(PrimitiveInstance::VT_SIZEARRAY, sizearray);
  }
  void add_sources(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sources) {
    fbb_.AddOffset(PrimitiveInstance::VT_SOURCES, sources);
  }
  void add_sourceweights(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sourceweights) {
    fbb_.AddOffset(PrimitiveInstance::VT_SOURCEWEIGHTS, sourceweights);
  }
  void add_startarray(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> startarray) {
    fbb_.AddOffset(PrimitiveInstance::VT_STARTARRAY, startarray);
  }
  void add_status(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> status) {
    fbb_.AddOffset(PrimitiveInstance::VT_STATUS, status);
  }
  void add_subsizearray(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> subsizearray) {
    fbb_.AddOffset(PrimitiveInstance::VT_SUBSIZEARRAY, subsizearray);
  }
  void add_subversion(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> subversion) {
    fbb_.AddOffset(PrimitiveInstance::VT_SUBVERSION, subversion);
  }
  void add_targets(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> targets) {
    fbb_.AddOffset(PrimitiveInstance::VT_TARGETS, targets);
  }
  void add_trueextent(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> trueextent) {
    fbb_.AddOffset(PrimitiveInstance::VT_TRUEEXTENT, trueextent);
  }
  void add_truelb(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> truelb) {
    fbb_.AddOffset(PrimitiveInstance::VT_TRUELB, truelb);
  }
  void add_typekeyvals(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> typekeyvals) {
    fbb_.AddOffset(PrimitiveInstance::VT_TYPEKEYVALS, typekeyvals);
  }
  void add_version(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> version) {
    fbb_.AddOffset(PrimitiveInstance::VT_VERSION, version);
  }
  void add_weighted(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> weighted) {
    fbb_.AddOffset(PrimitiveInstance::VT_WEIGHTED, weighted);
  }
  void add_weights(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> weights) {
    fbb_.AddOffset(PrimitiveInstance::VT_WEIGHTS, weights);
  }
  void add_winkeyvals(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> winkeyvals) {
    fbb_.AddOffset(PrimitiveInstance::VT_WINKEYVALS, winkeyvals);
  }
  void add_argv(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>>> argv) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARGV, argv);
  }
  void add_arrayofargv(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>>> arrayofargv) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARRAYOFARGV, arrayofargv);
  }
  void add_arrayofcommands(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>>> arrayofcommands) {
    fbb_.AddOffset(PrimitiveInstance::VT_ARRAYOFCOMMANDS, arrayofcommands);
  }
  void add_amode(int32_t amode) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_AMODE, amode, 0);
  }
  void add_blocklength(int32_t blocklength) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_BLOCKLENGTH, blocklength, 0);
  }
  void add_bridgecomm(int32_t bridgecomm) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_BRIDGECOMM, bridgecomm, 0);
  }
  void add_color(int32_t color) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_COLOR, color, 0);
  }
  void add_comm(int32_t comm) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_COMM, comm, 0);
  }
  void add_comm1(int32_t comm1) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_COMM1, comm1, 0);
  }
  void add_comm2(int32_t comm2) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_COMM2, comm2, 0);
  }
  void add_commkeyval(int32_t commkeyval) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_COMMKEYVAL, commkeyval, 0);
  }
  void add_commold(int32_t commold) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_COMMOLD, commold, 0);
  }
  void add_commute(int32_t commute) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_COMMUTE, commute, 0);
  }
  void add_count(int32_t count) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_COUNT, count, 0);
  }
  void add_datatype(int32_t datatype) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_DATATYPE, datatype, 0);
  }
  void add_dest(int32_t dest) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_DEST, dest, 0);
  }
  void add_direction(int32_t direction) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_DIRECTION, direction, 0);
  }
  void add_disp(int32_t disp) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_DISP, disp, 0);
  }
  void add_dispunit(int32_t dispunit) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_DISPUNIT, dispunit, 0);
  }
  void add_erhandler(int32_t erhandler) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_ERHANDLER, erhandler, 0);
  }
  void add_errhandler(int32_t errhandler) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_ERRHANDLER, errhandler, 0);
  }
  void add_errorclass(int32_t errorclass) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_ERRORCLASS, errorclass, 0);
  }
  void add_errorcode(int32_t errorcode) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_ERRORCODE, errorcode, 0);
  }
  void add_fd(int32_t fd) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_FD, fd, 0);
  }
  void add_fh(int32_t fh) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_FH, fh, 0);
  }
  void add_file(int32_t file) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_FILE, file, 0);
  }
  void add_flag(int32_t flag) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_FLAG, flag, 0);
  }
  void add_group(int32_t group) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_GROUP, group, 0);
  }
  void add_group1(int32_t group1) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_GROUP1, group1, 0);
  }
  void add_group2(int32_t group2) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_GROUP2, group2, 0);
  }
  void add_high(int32_t high) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_HIGH, high, 0);
  }
  void add_incount(int32_t incount) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_INCOUNT, incount, 0);
  }
  void add_indegree(int32_t indegree) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_INDEGREE, indegree, 0);
  }
  void add_info(int32_t info) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_INFO, info, 0);
  }
  void add_infoused(int32_t infoused) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_INFOUSED, infoused, 0);
  }
  void add_insize(int32_t insize) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_INSIZE, insize, 0);
  }
  void add_intercomm(int32_t intercomm) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_INTERCOMM, intercomm, 0);
  }
  void add_key(int32_t key) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_KEY, key, 0);
  }
  void add_localcomm(int32_t localcomm) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_LOCALCOMM, localcomm, 0);
  }
  void add_localleader(int32_t localleader) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_LOCALLEADER, localleader, 0);
  }
  void add_locktype(int32_t locktype) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_LOCKTYPE, locktype, 0);
  }
  void add_maxaddresses(int32_t maxaddresses) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MAXADDRESSES, maxaddresses, 0);
  }
  void add_maxdatatypes(int32_t maxdatatypes) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MAXDATATYPES, maxdatatypes, 0);
  }
  void add_maxdims(int32_t maxdims) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MAXDIMS, maxdims, 0);
  }
  void add_maxedges(int32_t maxedges) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MAXEDGES, maxedges, 0);
  }
  void add_maxindegree(int32_t maxindegree) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MAXINDEGREE, maxindegree, 0);
  }
  void add_maxindex(int32_t maxindex) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MAXINDEX, maxindex, 0);
  }
  void add_maxintegers(int32_t maxintegers) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MAXINTEGERS, maxintegers, 0);
  }
  void add_maxneighbors(int32_t maxneighbors) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MAXNEIGHBORS, maxneighbors, 0);
  }
  void add_maxoutdegree(int32_t maxoutdegree) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MAXOUTDEGREE, maxoutdegree, 0);
  }
  void add_maxprocs(int32_t maxprocs) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MAXPROCS, maxprocs, 0);
  }
  void add_message(int32_t message) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MESSAGE, message, 0);
  }
  void add_mpiassert(int32_t mpiassert) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_MPIASSERT, mpiassert, 0);
  }
  void add_n(int32_t n) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_N, n, 0);
  }
  void add_ndims(int32_t ndims) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_NDIMS, ndims, 0);
  }
  void add_newinfo(int32_t newinfo) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_NEWINFO, newinfo, 0);
  }
  void add_nnodes(int32_t nnodes) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_NNODES, nnodes, 0);
  }
  void add_oldcomm(int32_t oldcomm) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_OLDCOMM, oldcomm, 0);
  }
  void add_op(int32_t op) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_OP, op, 0);
  }
  void add_order(int32_t order) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_ORDER, order, 0);
  }
  void add_origincount(int32_t origincount) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_ORIGINCOUNT, origincount, 0);
  }
  void add_outcount(int32_t outcount) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_OUTCOUNT, outcount, 0);
  }
  void add_outdegree(int32_t outdegree) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_OUTDEGREE, outdegree, 0);
  }
  void add_outsize(int32_t outsize) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_OUTSIZE, outsize, 0);
  }
  void add_p(int32_t p) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_P, p, 0);
  }
  void add_r(int32_t r) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_R, r, 0);
  }
  void add_rank(int32_t rank) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_RANK, rank, 0);
  }
  void add_recvcount(int32_t recvcount) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_RECVCOUNT, recvcount, 0);
  }
  void add_recvtag(int32_t recvtag) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_RECVTAG, recvtag, 0);
  }
  void add_remoteleader(int32_t remoteleader) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_REMOTELEADER, remoteleader, 0);
  }
  void add_reorder(int32_t reorder) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_REORDER, reorder, 0);
  }
  void add_request(int32_t request) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_REQUEST, request, 0);
  }
  void add_resultcount(int32_t resultcount) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_RESULTCOUNT, resultcount, 0);
  }
  void add_root(int32_t root) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_ROOT, root, 0);
  }
  void add_sendcount(int32_t sendcount) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_SENDCOUNT, sendcount, 0);
  }
  void add_sendtag(int32_t sendtag) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_SENDTAG, sendtag, 0);
  }
  void add_size(int32_t size) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_SIZE, size, 0);
  }
  void add_source(int32_t source) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_SOURCE, source, 0);
  }
  void add_splittype(int32_t splittype) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_SPLITTYPE, splittype, 0);
  }
  void add_stride(int32_t stride) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_STRIDE, stride, 0);
  }
  void add_tag(int32_t tag) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_TAG, tag, 0);
  }
  void add_targetcount(int32_t targetcount) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_TARGETCOUNT, targetcount, 0);
  }
  void add_targetcout(int32_t targetcout) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_TARGETCOUT, targetcout, 0);
  }
  void add_targetrank(int32_t targetrank) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_TARGETRANK, targetrank, 0);
  }
  void add_typeclass(int32_t typeclass) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_TYPECLASS, typeclass, 0);
  }
  void add_typekeyval(int32_t typekeyval) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_TYPEKEYVAL, typekeyval, 0);
  }
  void add_whence(int32_t whence) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_WHENCE, whence, 0);
  }
  void add_win(int32_t win) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_WIN, win, 0);
  }
  void add_winkeyval(int32_t winkeyval) {
    fbb_.AddElement<int32_t>(PrimitiveInstance::VT_WINKEYVAL, winkeyval, 0);
  }
  void add_cancelfn(::flatbuffers::Offset<::flatbuffers::String> cancelfn) {
    fbb_.AddOffset(PrimitiveInstance::VT_CANCELFN, cancelfn);
  }
  void add_command(::flatbuffers::Offset<::flatbuffers::String> command) {
    fbb_.AddOffset(PrimitiveInstance::VT_COMMAND, command);
  }
  void add_commcopyattrfn(::flatbuffers::Offset<::flatbuffers::String> commcopyattrfn) {
    fbb_.AddOffset(PrimitiveInstance::VT_COMMCOPYATTRFN, commcopyattrfn);
  }
  void add_commdeleteattrfn(::flatbuffers::Offset<::flatbuffers::String> commdeleteattrfn) {
    fbb_.AddOffset(PrimitiveInstance::VT_COMMDELETEATTRFN, commdeleteattrfn);
  }
  void add_commname(::flatbuffers::Offset<::flatbuffers::String> commname) {
    fbb_.AddOffset(PrimitiveInstance::VT_COMMNAME, commname);
  }
  void add_datarep(::flatbuffers::Offset<::flatbuffers::String> datarep) {
    fbb_.AddOffset(PrimitiveInstance::VT_DATAREP, datarep);
  }
  void add_dtypefileextentfn(::flatbuffers::Offset<::flatbuffers::String> dtypefileextentfn) {
    fbb_.AddOffset(PrimitiveInstance::VT_DTYPEFILEEXTENTFN, dtypefileextentfn);
  }
  void add_filename(::flatbuffers::Offset<::flatbuffers::String> filename) {
    fbb_.AddOffset(PrimitiveInstance::VT_FILENAME, filename);
  }
  void add_freefn(::flatbuffers::Offset<::flatbuffers::String> freefn) {
    fbb_.AddOffset(PrimitiveInstance::VT_FREEFN, freefn);
  }
  void add_function(::flatbuffers::Offset<::flatbuffers::String> function) {
    fbb_.AddOffset(PrimitiveInstance::VT_FUNCTION, function);
  }
  void add_keys(::flatbuffers::Offset<::flatbuffers::String> keys) {
    fbb_.AddOffset(PrimitiveInstance::VT_KEYS, keys);
  }
  void add_name(::flatbuffers::Offset<::flatbuffers::String> name) {
    fbb_.AddOffset(PrimitiveInstance::VT_NAME, name);
  }
  void add_portname(::flatbuffers::Offset<::flatbuffers::String> portname) {
    fbb_.AddOffset(PrimitiveInstance::VT_PORTNAME, portname);
  }
  void add_queryfn(::flatbuffers::Offset<::flatbuffers::String> queryfn) {
    fbb_.AddOffset(PrimitiveInstance::VT_QUERYFN, queryfn);
  }
  void add_readconversionfn(::flatbuffers::Offset<::flatbuffers::String> readconversionfn) {
    fbb_.AddOffset(PrimitiveInstance::VT_READCONVERSIONFN, readconversionfn);
  }
  void add_servicename(::flatbuffers::Offset<::flatbuffers::String> servicename) {
    fbb_.AddOffset(PrimitiveInstance::VT_SERVICENAME, servicename);
  }
  void add_string(::flatbuffers::Offset<::flatbuffers::String> string) {
    fbb_.AddOffset(PrimitiveInstance::VT_STRING, string);
  }
  void add_typecopyattrfn(::flatbuffers::Offset<::flatbuffers::String> typecopyattrfn) {
    fbb_.AddOffset(PrimitiveInstance::VT_TYPECOPYATTRFN, typecopyattrfn);
  }
  void add_typedeleteattrfn(::flatbuffers::Offset<::flatbuffers::String> typedeleteattrfn) {
    fbb_.AddOffset(PrimitiveInstance::VT_TYPEDELETEATTRFN, typedeleteattrfn);
  }
  void add_typename_(::flatbuffers::Offset<::flatbuffers::String> typename_) {
    fbb_.AddOffset(PrimitiveInstance::VT_TYPENAME_, typename_);
  }
  void add_value(::flatbuffers::Offset<::flatbuffers::String> value) {
    fbb_.AddOffset(PrimitiveInstance::VT_VALUE, value);
  }
  void add_versions(::flatbuffers::Offset<::flatbuffers::String> versions) {
    fbb_.AddOffset(PrimitiveInstance::VT_VERSIONS, versions);
  }
  void add_wincopyattrfn(::flatbuffers::Offset<::flatbuffers::String> wincopyattrfn) {
    fbb_.AddOffset(PrimitiveInstance::VT_WINCOPYATTRFN, wincopyattrfn);
  }
  void add_windeleteattrfn(::flatbuffers::Offset<::flatbuffers::String> windeleteattrfn) {
    fbb_.AddOffset(PrimitiveInstance::VT_WINDELETEATTRFN, windeleteattrfn);
  }
  void add_winname(::flatbuffers::Offset<::flatbuffers::String> winname) {
    fbb_.AddOffset(PrimitiveInstance::VT_WINNAME, winname);
  }
  void add_writeconversionfn(::flatbuffers::Offset<::flatbuffers::String> writeconversionfn) {
    fbb_.AddOffset(PrimitiveInstance::VT_WRITECONVERSIONFN, writeconversionfn);
  }
  explicit PrimitiveInstanceBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<PrimitiveInstance> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<PrimitiveInstance>(end);
    return o;
  }
};

inline ::flatbuffers::Offset<PrimitiveInstance> CreatePrimitiveInstance(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    fbs::taz::profile::PrimitiveType type = fbs::taz::profile::PrimitiveType_MpiAbort,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> amodes = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofblocklengths = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofdisplacements = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayoferrcodes = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofindices = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofinfo = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofintegers = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofmaxprocs = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofrequests = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> arrayofstatuses = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> combiner = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> comms = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> commcart = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> commdistgraph = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> commgraph = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> commkeyvals = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> commutes = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> coords = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> counts = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> cstatus = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> dargarray = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> degrees = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> destinations = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> destweights = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> dims = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> displs = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> dispunits = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> distribarray = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> edges = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> errorclasss = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> errorcodes = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> extent = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> flags = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> fstatus = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> groups = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> gsizearray = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> index = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> inneighbors = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> intercomms = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> lb = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> messages = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> ndimss = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> nedges = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> neighbors = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> newcomm = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> newgroup = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> newintercomm = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> newrank = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> nkeys = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> nneighbors = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> nnodess = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> nodes = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> numaddresses = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> numdatatypes = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> numintegers = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> outcounts = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> outneighbors = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> parent = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> periods = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> position = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> provided = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> psizearray = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> ranks = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> rankdest = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> rankss = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> ranks1 = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> ranks2 = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> ranksource = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> rdispls = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> recvcounts = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> remaindims = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> requests = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> result = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> resultlen = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sdispls = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sendcounts = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sizes = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sizearray = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sources = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> sourceweights = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> startarray = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> status = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> subsizearray = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> subversion = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> targets = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> trueextent = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> truelb = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> typekeyvals = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> version = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> weighted = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> weights = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> winkeyvals = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>>> argv = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>>> arrayofargv = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>>> arrayofcommands = 0,
    int32_t amode = 0,
    int32_t blocklength = 0,
    int32_t bridgecomm = 0,
    int32_t color = 0,
    int32_t comm = 0,
    int32_t comm1 = 0,
    int32_t comm2 = 0,
    int32_t commkeyval = 0,
    int32_t commold = 0,
    int32_t commute = 0,
    int32_t count = 0,
    int32_t datatype = 0,
    int32_t dest = 0,
    int32_t direction = 0,
    int32_t disp = 0,
    int32_t dispunit = 0,
    int32_t erhandler = 0,
    int32_t errhandler = 0,
    int32_t errorclass = 0,
    int32_t errorcode = 0,
    int32_t fd = 0,
    int32_t fh = 0,
    int32_t file = 0,
    int32_t flag = 0,
    int32_t group = 0,
    int32_t group1 = 0,
    int32_t group2 = 0,
    int32_t high = 0,
    int32_t incount = 0,
    int32_t indegree = 0,
    int32_t info = 0,
    int32_t infoused = 0,
    int32_t insize = 0,
    int32_t intercomm = 0,
    int32_t key = 0,
    int32_t localcomm = 0,
    int32_t localleader = 0,
    int32_t locktype = 0,
    int32_t maxaddresses = 0,
    int32_t maxdatatypes = 0,
    int32_t maxdims = 0,
    int32_t maxedges = 0,
    int32_t maxindegree = 0,
    int32_t maxindex = 0,
    int32_t maxintegers = 0,
    int32_t maxneighbors = 0,
    int32_t maxoutdegree = 0,
    int32_t maxprocs = 0,
    int32_t message = 0,
    int32_t mpiassert = 0,
    int32_t n = 0,
    int32_t ndims = 0,
    int32_t newinfo = 0,
    int32_t nnodes = 0,
    int32_t oldcomm = 0,
    int32_t op = 0,
    int32_t order = 0,
    int32_t origincount = 0,
    int32_t outcount = 0,
    int32_t outdegree = 0,
    int32_t outsize = 0,
    int32_t p = 0,
    int32_t r = 0,
    int32_t rank = 0,
    int32_t recvcount = 0,
    int32_t recvtag = 0,
    int32_t remoteleader = 0,
    int32_t reorder = 0,
    int32_t request = 0,
    int32_t resultcount = 0,
    int32_t root = 0,
    int32_t sendcount = 0,
    int32_t sendtag = 0,
    int32_t size = 0,
    int32_t source = 0,
    int32_t splittype = 0,
    int32_t stride = 0,
    int32_t tag = 0,
    int32_t targetcount = 0,
    int32_t targetcout = 0,
    int32_t targetrank = 0,
    int32_t typeclass = 0,
    int32_t typekeyval = 0,
    int32_t whence = 0,
    int32_t win = 0,
    int32_t winkeyval = 0,
    ::flatbuffers::Offset<::flatbuffers::String> cancelfn = 0,
    ::flatbuffers::Offset<::flatbuffers::String> command = 0,
    ::flatbuffers::Offset<::flatbuffers::String> commcopyattrfn = 0,
    ::flatbuffers::Offset<::flatbuffers::String> commdeleteattrfn = 0,
    ::flatbuffers::Offset<::flatbuffers::String> commname = 0,
    ::flatbuffers::Offset<::flatbuffers::String> datarep = 0,
    ::flatbuffers::Offset<::flatbuffers::String> dtypefileextentfn = 0,
    ::flatbuffers::Offset<::flatbuffers::String> filename = 0,
    ::flatbuffers::Offset<::flatbuffers::String> freefn = 0,
    ::flatbuffers::Offset<::flatbuffers::String> function = 0,
    ::flatbuffers::Offset<::flatbuffers::String> keys = 0,
    ::flatbuffers::Offset<::flatbuffers::String> name = 0,
    ::flatbuffers::Offset<::flatbuffers::String> portname = 0,
    ::flatbuffers::Offset<::flatbuffers::String> queryfn = 0,
    ::flatbuffers::Offset<::flatbuffers::String> readconversionfn = 0,
    ::flatbuffers::Offset<::flatbuffers::String> servicename = 0,
    ::flatbuffers::Offset<::flatbuffers::String> string = 0,
    ::flatbuffers::Offset<::flatbuffers::String> typecopyattrfn = 0,
    ::flatbuffers::Offset<::flatbuffers::String> typedeleteattrfn = 0,
    ::flatbuffers::Offset<::flatbuffers::String> typename_ = 0,
    ::flatbuffers::Offset<::flatbuffers::String> value = 0,
    ::flatbuffers::Offset<::flatbuffers::String> versions = 0,
    ::flatbuffers::Offset<::flatbuffers::String> wincopyattrfn = 0,
    ::flatbuffers::Offset<::flatbuffers::String> windeleteattrfn = 0,
    ::flatbuffers::Offset<::flatbuffers::String> winname = 0,
    ::flatbuffers::Offset<::flatbuffers::String> writeconversionfn = 0) {
  PrimitiveInstanceBuilder builder_(_fbb);
  builder_.add_writeconversionfn(writeconversionfn);
  builder_.add_winname(winname);
  builder_.add_windeleteattrfn(windeleteattrfn);
  builder_.add_wincopyattrfn(wincopyattrfn);
  builder_.add_versions(versions);
  builder_.add_value(value);
  builder_.add_typename_(typename_);
  builder_.add_typedeleteattrfn(typedeleteattrfn);
  builder_.add_typecopyattrfn(typecopyattrfn);
  builder_.add_string(string);
  builder_.add_servicename(servicename);
  builder_.add_readconversionfn(readconversionfn);
  builder_.add_queryfn(queryfn);
  builder_.add_portname(portname);
  builder_.add_name(name);
  builder_.add_keys(keys);
  builder_.add_function(function);
  builder_.add_freefn(freefn);
  builder_.add_filename(filename);
  builder_.add_dtypefileextentfn(dtypefileextentfn);
  builder_.add_datarep(datarep);
  builder_.add_commname(commname);
  builder_.add_commdeleteattrfn(commdeleteattrfn);
  builder_.add_commcopyattrfn(commcopyattrfn);
  builder_.add_command(command);
  builder_.add_cancelfn(cancelfn);
  builder_.add_winkeyval(winkeyval);
  builder_.add_win(win);
  builder_.add_whence(whence);
  builder_.add_typekeyval(typekeyval);
  builder_.add_typeclass(typeclass);
  builder_.add_targetrank(targetrank);
  builder_.add_targetcout(targetcout);
  builder_.add_targetcount(targetcount);
  builder_.add_tag(tag);
  builder_.add_stride(stride);
  builder_.add_splittype(splittype);
  builder_.add_source(source);
  builder_.add_size(size);
  builder_.add_sendtag(sendtag);
  builder_.add_sendcount(sendcount);
  builder_.add_root(root);
  builder_.add_resultcount(resultcount);
  builder_.add_request(request);
  builder_.add_reorder(reorder);
  builder_.add_remoteleader(remoteleader);
  builder_.add_recvtag(recvtag);
  builder_.add_recvcount(recvcount);
  builder_.add_rank(rank);
  builder_.add_r(r);
  builder_.add_p(p);
  builder_.add_outsize(outsize);
  builder_.add_outdegree(outdegree);
  builder_.add_outcount(outcount);
  builder_.add_origincount(origincount);
  builder_.add_order(order);
  builder_.add_op(op);
  builder_.add_oldcomm(oldcomm);
  builder_.add_nnodes(nnodes);
  builder_.add_newinfo(newinfo);
  builder_.add_ndims(ndims);
  builder_.add_n(n);
  builder_.add_mpiassert(mpiassert);
  builder_.add_message(message);
  builder_.add_maxprocs(maxprocs);
  builder_.add_maxoutdegree(maxoutdegree);
  builder_.add_maxneighbors(maxneighbors);
  builder_.add_maxintegers(maxintegers);
  builder_.add_maxindex(maxindex);
  builder_.add_maxindegree(maxindegree);
  builder_.add_maxedges(maxedges);
  builder_.add_maxdims(maxdims);
  builder_.add_maxdatatypes(maxdatatypes);
  builder_.add_maxaddresses(maxaddresses);
  builder_.add_locktype(locktype);
  builder_.add_localleader(localleader);
  builder_.add_localcomm(localcomm);
  builder_.add_key(key);
  builder_.add_intercomm(intercomm);
  builder_.add_insize(insize);
  builder_.add_infoused(infoused);
  builder_.add_info(info);
  builder_.add_indegree(indegree);
  builder_.add_incount(incount);
  builder_.add_high(high);
  builder_.add_group2(group2);
  builder_.add_group1(group1);
  builder_.add_group(group);
  builder_.add_flag(flag);
  builder_.add_file(file);
  builder_.add_fh(fh);
  builder_.add_fd(fd);
  builder_.add_errorcode(errorcode);
  builder_.add_errorclass(errorclass);
  builder_.add_errhandler(errhandler);
  builder_.add_erhandler(erhandler);
  builder_.add_dispunit(dispunit);
  builder_.add_disp(disp);
  builder_.add_direction(direction);
  builder_.add_dest(dest);
  builder_.add_datatype(datatype);
  builder_.add_count(count);
  builder_.add_commute(commute);
  builder_.add_commold(commold);
  builder_.add_commkeyval(commkeyval);
  builder_.add_comm2(comm2);
  builder_.add_comm1(comm1);
  builder_.add_comm(comm);
  builder_.add_color(color);
  builder_.add_bridgecomm(bridgecomm);
  builder_.add_blocklength(blocklength);
  builder_.add_amode(amode);
  builder_.add_arrayofcommands(arrayofcommands);
  builder_.add_arrayofargv(arrayofargv);
  builder_.add_argv(argv);
  builder_.add_winkeyvals(winkeyvals);
  builder_.add_weights(weights);
  builder_.add_weighted(weighted);
  builder_.add_version(version);
  builder_.add_typekeyvals(typekeyvals);
  builder_.add_truelb(truelb);
  builder_.add_trueextent(trueextent);
  builder_.add_targets(targets);
  builder_.add_subversion(subversion);
  builder_.add_subsizearray(subsizearray);
  builder_.add_status(status);
  builder_.add_startarray(startarray);
  builder_.add_sourceweights(sourceweights);
  builder_.add_sources(sources);
  builder_.add_sizearray(sizearray);
  builder_.add_sizes(sizes);
  builder_.add_sendcounts(sendcounts);
  builder_.add_sdispls(sdispls);
  builder_.add_resultlen(resultlen);
  builder_.add_result(result);
  builder_.add_requests(requests);
  builder_.add_remaindims(remaindims);
  builder_.add_recvcounts(recvcounts);
  builder_.add_rdispls(rdispls);
  builder_.add_ranksource(ranksource);
  builder_.add_ranks2(ranks2);
  builder_.add_ranks1(ranks1);
  builder_.add_rankss(rankss);
  builder_.add_rankdest(rankdest);
  builder_.add_ranks(ranks);
  builder_.add_psizearray(psizearray);
  builder_.add_provided(provided);
  builder_.add_position(position);
  builder_.add_periods(periods);
  builder_.add_parent(parent);
  builder_.add_outneighbors(outneighbors);
  builder_.add_outcounts(outcounts);
  builder_.add_numintegers(numintegers);
  builder_.add_numdatatypes(numdatatypes);
  builder_.add_numaddresses(numaddresses);
  builder_.add_nodes(nodes);
  builder_.add_nnodess(nnodess);
  builder_.add_nneighbors(nneighbors);
  builder_.add_nkeys(nkeys);
  builder_.add_newrank(newrank);
  builder_.add_newintercomm(newintercomm);
  builder_.add_newgroup(newgroup);
  builder_.add_newcomm(newcomm);
  builder_.add_neighbors(neighbors);
  builder_.add_nedges(nedges);
  builder_.add_ndimss(ndimss);
  builder_.add_messages(messages);
  builder_.add_lb(lb);
  builder_.add_intercomms(intercomms);
  builder_.add_inneighbors(inneighbors);
  builder_.add_index(index);
  builder_.add_gsizearray(gsizearray);
  builder_.add_groups(groups);
  builder_.add_fstatus(fstatus);
  builder_.add_flags(flags);
  builder_.add_extent(extent);
  builder_.add_errorcodes(errorcodes);
  builder_.add_errorclasss(errorclasss);
  builder_.add_edges(edges);
  builder_.add_distribarray(distribarray);
  builder_.add_dispunits(dispunits);
  builder_.add_displs(displs);
  builder_.add_dims(dims);
  builder_.add_destweights(destweights);
  builder_.add_destinations(destinations);
  builder_.add_degrees(degrees);
  builder_.add_dargarray(dargarray);
  builder_.add_cstatus(cstatus);
  builder_.add_counts(counts);
  builder_.add_coords(coords);
  builder_.add_commutes(commutes);
  builder_.add_commkeyvals(commkeyvals);
  builder_.add_commgraph(commgraph);
  builder_.add_commdistgraph(commdistgraph);
  builder_.add_commcart(commcart);
  builder_.add_comms(comms);
  builder_.add_combiner(combiner);
  builder_.add_arrayofstatuses(arrayofstatuses);
  builder_.add_arrayofrequests(arrayofrequests);
  builder_.add_arrayofmaxprocs(arrayofmaxprocs);
  builder_.add_arrayofintegers(arrayofintegers);
  builder_.add_arrayofinfo(arrayofinfo);
  builder_.add_arrayofindices(arrayofindices);
  builder_.add_arrayoferrcodes(arrayoferrcodes);
  builder_.add_arrayofdisplacements(arrayofdisplacements);
  builder_.add_arrayofblocklengths(arrayofblocklengths);
  builder_.add_amodes(amodes);
  builder_.add_type(type);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<PrimitiveInstance> CreatePrimitiveInstanceDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    fbs::taz::profile::PrimitiveType type = fbs::taz::profile::PrimitiveType_MpiAbort,
    const std::vector<int32_t> *amodes = nullptr,
    const std::vector<int32_t> *arrayofblocklengths = nullptr,
    const std::vector<int32_t> *arrayofdisplacements = nullptr,
    const std::vector<int32_t> *arrayoferrcodes = nullptr,
    const std::vector<int32_t> *arrayofindices = nullptr,
    const std::vector<int32_t> *arrayofinfo = nullptr,
    const std::vector<int32_t> *arrayofintegers = nullptr,
    const std::vector<int32_t> *arrayofmaxprocs = nullptr,
    const std::vector<int32_t> *arrayofrequests = nullptr,
    const std::vector<int32_t> *arrayofstatuses = nullptr,
    const std::vector<int32_t> *combiner = nullptr,
    const std::vector<int32_t> *comms = nullptr,
    const std::vector<int32_t> *commcart = nullptr,
    const std::vector<int32_t> *commdistgraph = nullptr,
    const std::vector<int32_t> *commgraph = nullptr,
    const std::vector<int32_t> *commkeyvals = nullptr,
    const std::vector<int32_t> *commutes = nullptr,
    const std::vector<int32_t> *coords = nullptr,
    const std::vector<int32_t> *counts = nullptr,
    const std::vector<int32_t> *cstatus = nullptr,
    const std::vector<int32_t> *dargarray = nullptr,
    const std::vector<int32_t> *degrees = nullptr,
    const std::vector<int32_t> *destinations = nullptr,
    const std::vector<int32_t> *destweights = nullptr,
    const std::vector<int32_t> *dims = nullptr,
    const std::vector<int32_t> *displs = nullptr,
    const std::vector<int32_t> *dispunits = nullptr,
    const std::vector<int32_t> *distribarray = nullptr,
    const std::vector<int32_t> *edges = nullptr,
    const std::vector<int32_t> *errorclasss = nullptr,
    const std::vector<int32_t> *errorcodes = nullptr,
    const std::vector<int32_t> *extent = nullptr,
    const std::vector<int32_t> *flags = nullptr,
    const std::vector<int32_t> *fstatus = nullptr,
    const std::vector<int32_t> *groups = nullptr,
    const std::vector<int32_t> *gsizearray = nullptr,
    const std::vector<int32_t> *index = nullptr,
    const std::vector<int32_t> *inneighbors = nullptr,
    const std::vector<int32_t> *intercomms = nullptr,
    const std::vector<int32_t> *lb = nullptr,
    const std::vector<int32_t> *messages = nullptr,
    const std::vector<int32_t> *ndimss = nullptr,
    const std::vector<int32_t> *nedges = nullptr,
    const std::vector<int32_t> *neighbors = nullptr,
    const std::vector<int32_t> *newcomm = nullptr,
    const std::vector<int32_t> *newgroup = nullptr,
    const std::vector<int32_t> *newintercomm = nullptr,
    const std::vector<int32_t> *newrank = nullptr,
    const std::vector<int32_t> *nkeys = nullptr,
    const std::vector<int32_t> *nneighbors = nullptr,
    const std::vector<int32_t> *nnodess = nullptr,
    const std::vector<int32_t> *nodes = nullptr,
    const std::vector<int32_t> *numaddresses = nullptr,
    const std::vector<int32_t> *numdatatypes = nullptr,
    const std::vector<int32_t> *numintegers = nullptr,
    const std::vector<int32_t> *outcounts = nullptr,
    const std::vector<int32_t> *outneighbors = nullptr,
    const std::vector<int32_t> *parent = nullptr,
    const std::vector<int32_t> *periods = nullptr,
    const std::vector<int32_t> *position = nullptr,
    const std::vector<int32_t> *provided = nullptr,
    const std::vector<int32_t> *psizearray = nullptr,
    const std::vector<int32_t> *ranks = nullptr,
    const std::vector<int32_t> *rankdest = nullptr,
    const std::vector<int32_t> *rankss = nullptr,
    const std::vector<int32_t> *ranks1 = nullptr,
    const std::vector<int32_t> *ranks2 = nullptr,
    const std::vector<int32_t> *ranksource = nullptr,
    const std::vector<int32_t> *rdispls = nullptr,
    const std::vector<int32_t> *recvcounts = nullptr,
    const std::vector<int32_t> *remaindims = nullptr,
    const std::vector<int32_t> *requests = nullptr,
    const std::vector<int32_t> *result = nullptr,
    const std::vector<int32_t> *resultlen = nullptr,
    const std::vector<int32_t> *sdispls = nullptr,
    const std::vector<int32_t> *sendcounts = nullptr,
    const std::vector<int32_t> *sizes = nullptr,
    const std::vector<int32_t> *sizearray = nullptr,
    const std::vector<int32_t> *sources = nullptr,
    const std::vector<int32_t> *sourceweights = nullptr,
    const std::vector<int32_t> *startarray = nullptr,
    const std::vector<int32_t> *status = nullptr,
    const std::vector<int32_t> *subsizearray = nullptr,
    const std::vector<int32_t> *subversion = nullptr,
    const std::vector<int32_t> *targets = nullptr,
    const std::vector<int32_t> *trueextent = nullptr,
    const std::vector<int32_t> *truelb = nullptr,
    const std::vector<int32_t> *typekeyvals = nullptr,
    const std::vector<int32_t> *version = nullptr,
    const std::vector<int32_t> *weighted = nullptr,
    const std::vector<int32_t> *weights = nullptr,
    const std::vector<int32_t> *winkeyvals = nullptr,
    const std::vector<::flatbuffers::Offset<::flatbuffers::String>> *argv = nullptr,
    const std::vector<::flatbuffers::Offset<::flatbuffers::String>> *arrayofargv = nullptr,
    const std::vector<::flatbuffers::Offset<::flatbuffers::String>> *arrayofcommands = nullptr,
    int32_t amode = 0,
    int32_t blocklength = 0,
    int32_t bridgecomm = 0,
    int32_t color = 0,
    int32_t comm = 0,
    int32_t comm1 = 0,
    int32_t comm2 = 0,
    int32_t commkeyval = 0,
    int32_t commold = 0,
    int32_t commute = 0,
    int32_t count = 0,
    int32_t datatype = 0,
    int32_t dest = 0,
    int32_t direction = 0,
    int32_t disp = 0,
    int32_t dispunit = 0,
    int32_t erhandler = 0,
    int32_t errhandler = 0,
    int32_t errorclass = 0,
    int32_t errorcode = 0,
    int32_t fd = 0,
    int32_t fh = 0,
    int32_t file = 0,
    int32_t flag = 0,
    int32_t group = 0,
    int32_t group1 = 0,
    int32_t group2 = 0,
    int32_t high = 0,
    int32_t incount = 0,
    int32_t indegree = 0,
    int32_t info = 0,
    int32_t infoused = 0,
    int32_t insize = 0,
    int32_t intercomm = 0,
    int32_t key = 0,
    int32_t localcomm = 0,
    int32_t localleader = 0,
    int32_t locktype = 0,
    int32_t maxaddresses = 0,
    int32_t maxdatatypes = 0,
    int32_t maxdims = 0,
    int32_t maxedges = 0,
    int32_t maxindegree = 0,
    int32_t maxindex = 0,
    int32_t maxintegers = 0,
    int32_t maxneighbors = 0,
    int32_t maxoutdegree = 0,
    int32_t maxprocs = 0,
    int32_t message = 0,
    int32_t mpiassert = 0,
    int32_t n = 0,
    int32_t ndims = 0,
    int32_t newinfo = 0,
    int32_t nnodes = 0,
    int32_t oldcomm = 0,
    int32_t op = 0,
    int32_t order = 0,
    int32_t origincount = 0,
    int32_t outcount = 0,
    int32_t outdegree = 0,
    int32_t outsize = 0,
    int32_t p = 0,
    int32_t r = 0,
    int32_t rank = 0,
    int32_t recvcount = 0,
    int32_t recvtag = 0,
    int32_t remoteleader = 0,
    int32_t reorder = 0,
    int32_t request = 0,
    int32_t resultcount = 0,
    int32_t root = 0,
    int32_t sendcount = 0,
    int32_t sendtag = 0,
    int32_t size = 0,
    int32_t source = 0,
    int32_t splittype = 0,
    int32_t stride = 0,
    int32_t tag = 0,
    int32_t targetcount = 0,
    int32_t targetcout = 0,
    int32_t targetrank = 0,
    int32_t typeclass = 0,
    int32_t typekeyval = 0,
    int32_t whence = 0,
    int32_t win = 0,
    int32_t winkeyval = 0,
    const char *cancelfn = nullptr,
    const char *command = nullptr,
    const char *commcopyattrfn = nullptr,
    const char *commdeleteattrfn = nullptr,
    const char *commname = nullptr,
    const char *datarep = nullptr,
    const char *dtypefileextentfn = nullptr,
    const char *filename = nullptr,
    const char *freefn = nullptr,
    const char *function = nullptr,
    const char *keys = nullptr,
    const char *name = nullptr,
    const char *portname = nullptr,
    const char *queryfn = nullptr,
    const char *readconversionfn = nullptr,
    const char *servicename = nullptr,
    const char *string = nullptr,
    const char *typecopyattrfn = nullptr,
    const char *typedeleteattrfn = nullptr,
    const char *typename_ = nullptr,
    const char *value = nullptr,
    const char *versions = nullptr,
    const char *wincopyattrfn = nullptr,
    const char *windeleteattrfn = nullptr,
    const char *winname = nullptr,
    const char *writeconversionfn = nullptr) {
  auto amodes__ = amodes ? _fbb.CreateVector<int32_t>(*amodes) : 0;
  auto arrayofblocklengths__ = arrayofblocklengths ? _fbb.CreateVector<int32_t>(*arrayofblocklengths) : 0;
  auto arrayofdisplacements__ = arrayofdisplacements ? _fbb.CreateVector<int32_t>(*arrayofdisplacements) : 0;
  auto arrayoferrcodes__ = arrayoferrcodes ? _fbb.CreateVector<int32_t>(*arrayoferrcodes) : 0;
  auto arrayofindices__ = arrayofindices ? _fbb.CreateVector<int32_t>(*arrayofindices) : 0;
  auto arrayofinfo__ = arrayofinfo ? _fbb.CreateVector<int32_t>(*arrayofinfo) : 0;
  auto arrayofintegers__ = arrayofintegers ? _fbb.CreateVector<int32_t>(*arrayofintegers) : 0;
  auto arrayofmaxprocs__ = arrayofmaxprocs ? _fbb.CreateVector<int32_t>(*arrayofmaxprocs) : 0;
  auto arrayofrequests__ = arrayofrequests ? _fbb.CreateVector<int32_t>(*arrayofrequests) : 0;
  auto arrayofstatuses__ = arrayofstatuses ? _fbb.CreateVector<int32_t>(*arrayofstatuses) : 0;
  auto combiner__ = combiner ? _fbb.CreateVector<int32_t>(*combiner) : 0;
  auto comms__ = comms ? _fbb.CreateVector<int32_t>(*comms) : 0;
  auto commcart__ = commcart ? _fbb.CreateVector<int32_t>(*commcart) : 0;
  auto commdistgraph__ = commdistgraph ? _fbb.CreateVector<int32_t>(*commdistgraph) : 0;
  auto commgraph__ = commgraph ? _fbb.CreateVector<int32_t>(*commgraph) : 0;
  auto commkeyvals__ = commkeyvals ? _fbb.CreateVector<int32_t>(*commkeyvals) : 0;
  auto commutes__ = commutes ? _fbb.CreateVector<int32_t>(*commutes) : 0;
  auto coords__ = coords ? _fbb.CreateVector<int32_t>(*coords) : 0;
  auto counts__ = counts ? _fbb.CreateVector<int32_t>(*counts) : 0;
  auto cstatus__ = cstatus ? _fbb.CreateVector<int32_t>(*cstatus) : 0;
  auto dargarray__ = dargarray ? _fbb.CreateVector<int32_t>(*dargarray) : 0;
  auto degrees__ = degrees ? _fbb.CreateVector<int32_t>(*degrees) : 0;
  auto destinations__ = destinations ? _fbb.CreateVector<int32_t>(*destinations) : 0;
  auto destweights__ = destweights ? _fbb.CreateVector<int32_t>(*destweights) : 0;
  auto dims__ = dims ? _fbb.CreateVector<int32_t>(*dims) : 0;
  auto displs__ = displs ? _fbb.CreateVector<int32_t>(*displs) : 0;
  auto dispunits__ = dispunits ? _fbb.CreateVector<int32_t>(*dispunits) : 0;
  auto distribarray__ = distribarray ? _fbb.CreateVector<int32_t>(*distribarray) : 0;
  auto edges__ = edges ? _fbb.CreateVector<int32_t>(*edges) : 0;
  auto errorclasss__ = errorclasss ? _fbb.CreateVector<int32_t>(*errorclasss) : 0;
  auto errorcodes__ = errorcodes ? _fbb.CreateVector<int32_t>(*errorcodes) : 0;
  auto extent__ = extent ? _fbb.CreateVector<int32_t>(*extent) : 0;
  auto flags__ = flags ? _fbb.CreateVector<int32_t>(*flags) : 0;
  auto fstatus__ = fstatus ? _fbb.CreateVector<int32_t>(*fstatus) : 0;
  auto groups__ = groups ? _fbb.CreateVector<int32_t>(*groups) : 0;
  auto gsizearray__ = gsizearray ? _fbb.CreateVector<int32_t>(*gsizearray) : 0;
  auto index__ = index ? _fbb.CreateVector<int32_t>(*index) : 0;
  auto inneighbors__ = inneighbors ? _fbb.CreateVector<int32_t>(*inneighbors) : 0;
  auto intercomms__ = intercomms ? _fbb.CreateVector<int32_t>(*intercomms) : 0;
  auto lb__ = lb ? _fbb.CreateVector<int32_t>(*lb) : 0;
  auto messages__ = messages ? _fbb.CreateVector<int32_t>(*messages) : 0;
  auto ndimss__ = ndimss ? _fbb.CreateVector<int32_t>(*ndimss) : 0;
  auto nedges__ = nedges ? _fbb.CreateVector<int32_t>(*nedges) : 0;
  auto neighbors__ = neighbors ? _fbb.CreateVector<int32_t>(*neighbors) : 0;
  auto newcomm__ = newcomm ? _fbb.CreateVector<int32_t>(*newcomm) : 0;
  auto newgroup__ = newgroup ? _fbb.CreateVector<int32_t>(*newgroup) : 0;
  auto newintercomm__ = newintercomm ? _fbb.CreateVector<int32_t>(*newintercomm) : 0;
  auto newrank__ = newrank ? _fbb.CreateVector<int32_t>(*newrank) : 0;
  auto nkeys__ = nkeys ? _fbb.CreateVector<int32_t>(*nkeys) : 0;
  auto nneighbors__ = nneighbors ? _fbb.CreateVector<int32_t>(*nneighbors) : 0;
  auto nnodess__ = nnodess ? _fbb.CreateVector<int32_t>(*nnodess) : 0;
  auto nodes__ = nodes ? _fbb.CreateVector<int32_t>(*nodes) : 0;
  auto numaddresses__ = numaddresses ? _fbb.CreateVector<int32_t>(*numaddresses) : 0;
  auto numdatatypes__ = numdatatypes ? _fbb.CreateVector<int32_t>(*numdatatypes) : 0;
  auto numintegers__ = numintegers ? _fbb.CreateVector<int32_t>(*numintegers) : 0;
  auto outcounts__ = outcounts ? _fbb.CreateVector<int32_t>(*outcounts) : 0;
  auto outneighbors__ = outneighbors ? _fbb.CreateVector<int32_t>(*outneighbors) : 0;
  auto parent__ = parent ? _fbb.CreateVector<int32_t>(*parent) : 0;
  auto periods__ = periods ? _fbb.CreateVector<int32_t>(*periods) : 0;
  auto position__ = position ? _fbb.CreateVector<int32_t>(*position) : 0;
  auto provided__ = provided ? _fbb.CreateVector<int32_t>(*provided) : 0;
  auto psizearray__ = psizearray ? _fbb.CreateVector<int32_t>(*psizearray) : 0;
  auto ranks__ = ranks ? _fbb.CreateVector<int32_t>(*ranks) : 0;
  auto rankdest__ = rankdest ? _fbb.CreateVector<int32_t>(*rankdest) : 0;
  auto rankss__ = rankss ? _fbb.CreateVector<int32_t>(*rankss) : 0;
  auto ranks1__ = ranks1 ? _fbb.CreateVector<int32_t>(*ranks1) : 0;
  auto ranks2__ = ranks2 ? _fbb.CreateVector<int32_t>(*ranks2) : 0;
  auto ranksource__ = ranksource ? _fbb.CreateVector<int32_t>(*ranksource) : 0;
  auto rdispls__ = rdispls ? _fbb.CreateVector<int32_t>(*rdispls) : 0;
  auto recvcounts__ = recvcounts ? _fbb.CreateVector<int32_t>(*recvcounts) : 0;
  auto remaindims__ = remaindims ? _fbb.CreateVector<int32_t>(*remaindims) : 0;
  auto requests__ = requests ? _fbb.CreateVector<int32_t>(*requests) : 0;
  auto result__ = result ? _fbb.CreateVector<int32_t>(*result) : 0;
  auto resultlen__ = resultlen ? _fbb.CreateVector<int32_t>(*resultlen) : 0;
  auto sdispls__ = sdispls ? _fbb.CreateVector<int32_t>(*sdispls) : 0;
  auto sendcounts__ = sendcounts ? _fbb.CreateVector<int32_t>(*sendcounts) : 0;
  auto sizes__ = sizes ? _fbb.CreateVector<int32_t>(*sizes) : 0;
  auto sizearray__ = sizearray ? _fbb.CreateVector<int32_t>(*sizearray) : 0;
  auto sources__ = sources ? _fbb.CreateVector<int32_t>(*sources) : 0;
  auto sourceweights__ = sourceweights ? _fbb.CreateVector<int32_t>(*sourceweights) : 0;
  auto startarray__ = startarray ? _fbb.CreateVector<int32_t>(*startarray) : 0;
  auto status__ = status ? _fbb.CreateVector<int32_t>(*status) : 0;
  auto subsizearray__ = subsizearray ? _fbb.CreateVector<int32_t>(*subsizearray) : 0;
  auto subversion__ = subversion ? _fbb.CreateVector<int32_t>(*subversion) : 0;
  auto targets__ = targets ? _fbb.CreateVector<int32_t>(*targets) : 0;
  auto trueextent__ = trueextent ? _fbb.CreateVector<int32_t>(*trueextent) : 0;
  auto truelb__ = truelb ? _fbb.CreateVector<int32_t>(*truelb) : 0;
  auto typekeyvals__ = typekeyvals ? _fbb.CreateVector<int32_t>(*typekeyvals) : 0;
  auto version__ = version ? _fbb.CreateVector<int32_t>(*version) : 0;
  auto weighted__ = weighted ? _fbb.CreateVector<int32_t>(*weighted) : 0;
  auto weights__ = weights ? _fbb.CreateVector<int32_t>(*weights) : 0;
  auto winkeyvals__ = winkeyvals ? _fbb.CreateVector<int32_t>(*winkeyvals) : 0;
  auto argv__ = argv ? _fbb.CreateVector<::flatbuffers::Offset<::flatbuffers::String>>(*argv) : 0;
  auto arrayofargv__ = arrayofargv ? _fbb.CreateVector<::flatbuffers::Offset<::flatbuffers::String>>(*arrayofargv) : 0;
  auto arrayofcommands__ = arrayofcommands ? _fbb.CreateVector<::flatbuffers::Offset<::flatbuffers::String>>(*arrayofcommands) : 0;
  auto cancelfn__ = cancelfn ? _fbb.CreateString(cancelfn) : 0;
  auto command__ = command ? _fbb.CreateString(command) : 0;
  auto commcopyattrfn__ = commcopyattrfn ? _fbb.CreateString(commcopyattrfn) : 0;
  auto commdeleteattrfn__ = commdeleteattrfn ? _fbb.CreateString(commdeleteattrfn) : 0;
  auto commname__ = commname ? _fbb.CreateString(commname) : 0;
  auto datarep__ = datarep ? _fbb.CreateString(datarep) : 0;
  auto dtypefileextentfn__ = dtypefileextentfn ? _fbb.CreateString(dtypefileextentfn) : 0;
  auto filename__ = filename ? _fbb.CreateString(filename) : 0;
  auto freefn__ = freefn ? _fbb.CreateString(freefn) : 0;
  auto function__ = function ? _fbb.CreateString(function) : 0;
  auto keys__ = keys ? _fbb.CreateString(keys) : 0;
  auto name__ = name ? _fbb.CreateString(name) : 0;
  auto portname__ = portname ? _fbb.CreateString(portname) : 0;
  auto queryfn__ = queryfn ? _fbb.CreateString(queryfn) : 0;
  auto readconversionfn__ = readconversionfn ? _fbb.CreateString(readconversionfn) : 0;
  auto servicename__ = servicename ? _fbb.CreateString(servicename) : 0;
  auto string__ = string ? _fbb.CreateString(string) : 0;
  auto typecopyattrfn__ = typecopyattrfn ? _fbb.CreateString(typecopyattrfn) : 0;
  auto typedeleteattrfn__ = typedeleteattrfn ? _fbb.CreateString(typedeleteattrfn) : 0;
  auto typename___ = typename_ ? _fbb.CreateString(typename_) : 0;
  auto value__ = value ? _fbb.CreateString(value) : 0;
  auto versions__ = versions ? _fbb.CreateString(versions) : 0;
  auto wincopyattrfn__ = wincopyattrfn ? _fbb.CreateString(wincopyattrfn) : 0;
  auto windeleteattrfn__ = windeleteattrfn ? _fbb.CreateString(windeleteattrfn) : 0;
  auto winname__ = winname ? _fbb.CreateString(winname) : 0;
  auto writeconversionfn__ = writeconversionfn ? _fbb.CreateString(writeconversionfn) : 0;
  return fbs::taz::profile::CreatePrimitiveInstance(
      _fbb,
      type,
      amodes__,
      arrayofblocklengths__,
      arrayofdisplacements__,
      arrayoferrcodes__,
      arrayofindices__,
      arrayofinfo__,
      arrayofintegers__,
      arrayofmaxprocs__,
      arrayofrequests__,
      arrayofstatuses__,
      combiner__,
      comms__,
      commcart__,
      commdistgraph__,
      commgraph__,
      commkeyvals__,
      commutes__,
      coords__,
      counts__,
      cstatus__,
      dargarray__,
      degrees__,
      destinations__,
      destweights__,
      dims__,
      displs__,
      dispunits__,
      distribarray__,
      edges__,
      errorclasss__,
      errorcodes__,
      extent__,
      flags__,
      fstatus__,
      groups__,
      gsizearray__,
      index__,
      inneighbors__,
      intercomms__,
      lb__,
      messages__,
      ndimss__,
      nedges__,
      neighbors__,
      newcomm__,
      newgroup__,
      newintercomm__,
      newrank__,
      nkeys__,
      nneighbors__,
      nnodess__,
      nodes__,
      numaddresses__,
      numdatatypes__,
      numintegers__,
      outcounts__,
      outneighbors__,
      parent__,
      periods__,
      position__,
      provided__,
      psizearray__,
      ranks__,
      rankdest__,
      rankss__,
      ranks1__,
      ranks2__,
      ranksource__,
      rdispls__,
      recvcounts__,
      remaindims__,
      requests__,
      result__,
      resultlen__,
      sdispls__,
      sendcounts__,
      sizes__,
      sizearray__,
      sources__,
      sourceweights__,
      startarray__,
      status__,
      subsizearray__,
      subversion__,
      targets__,
      trueextent__,
      truelb__,
      typekeyvals__,
      version__,
      weighted__,
      weights__,
      winkeyvals__,
      argv__,
      arrayofargv__,
      arrayofcommands__,
      amode,
      blocklength,
      bridgecomm,
      color,
      comm,
      comm1,
      comm2,
      commkeyval,
      commold,
      commute,
      count,
      datatype,
      dest,
      direction,
      disp,
      dispunit,
      erhandler,
      errhandler,
      errorclass,
      errorcode,
      fd,
      fh,
      file,
      flag,
      group,
      group1,
      group2,
      high,
      incount,
      indegree,
      info,
      infoused,
      insize,
      intercomm,
      key,
      localcomm,
      localleader,
      locktype,
      maxaddresses,
      maxdatatypes,
      maxdims,
      maxedges,
      maxindegree,
      maxindex,
      maxintegers,
      maxneighbors,
      maxoutdegree,
      maxprocs,
      message,
      mpiassert,
      n,
      ndims,
      newinfo,
      nnodes,
      oldcomm,
      op,
      order,
      origincount,
      outcount,
      outdegree,
      outsize,
      p,
      r,
      rank,
      recvcount,
      recvtag,
      remoteleader,
      reorder,
      request,
      resultcount,
      root,
      sendcount,
      sendtag,
      size,
      source,
      splittype,
      stride,
      tag,
      targetcount,
      targetcout,
      targetrank,
      typeclass,
      typekeyval,
      whence,
      win,
      winkeyval,
      cancelfn__,
      command__,
      commcopyattrfn__,
      commdeleteattrfn__,
      commname__,
      datarep__,
      dtypefileextentfn__,
      filename__,
      freefn__,
      function__,
      keys__,
      name__,
      portname__,
      queryfn__,
      readconversionfn__,
      servicename__,
      string__,
      typecopyattrfn__,
      typedeleteattrfn__,
      typename___,
      value__,
      versions__,
      wincopyattrfn__,
      windeleteattrfn__,
      winname__,
      writeconversionfn__);
}

}  // namespace profile
}  // namespace taz
}  // namespace fbs

#endif  // FLATBUFFERS_GENERATED_INSTANCES_FBS_TAZ_PROFILE_H_
